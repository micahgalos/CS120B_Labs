
mgalo001_lab10_part4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800100  00000814  000008a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000814  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800124  00800124  000008cc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008cc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  0000093c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c5a  00000000  00000000  000009c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000901  00000000  00000000  0000161e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000626  00000000  00000000  00001f1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000128  00000000  00000000  00002548  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000628  00000000  00000000  00002670  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001ad  00000000  00000000  00002c98  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00002e45  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	6d c0       	rjmp	.+218    	; 0x110 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e1       	ldi	r30, 0x14	; 20
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 32       	cpi	r26, 0x24	; 36
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e2       	ldi	r26, 0x24	; 36
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a5 33       	cpi	r26, 0x35	; 53
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	d8 d1       	rcall	.+944    	; 0x474 <main>
  c4:	a5 c3       	rjmp	.+1866   	; 0x810 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <TimerOn>:
	set_PWM(0);
}

void PWM_off() {
	TCCR3A = 0x00;
	TCCR3B = 0x00;
  c8:	8b e0       	ldi	r24, 0x0B	; 11
  ca:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  ce:	8d e7       	ldi	r24, 0x7D	; 125
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  d6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  da:	82 e0       	ldi	r24, 0x02	; 2
  dc:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
  e0:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  e4:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
  e8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
  ec:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
  f0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
  f4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
  f8:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <_avr_timer_cntcurr>
  fc:	90 93 2c 01 	sts	0x012C, r25	; 0x80012c <_avr_timer_cntcurr+0x1>
 100:	a0 93 2d 01 	sts	0x012D, r26	; 0x80012d <_avr_timer_cntcurr+0x2>
 104:	b0 93 2e 01 	sts	0x012E, r27	; 0x80012e <_avr_timer_cntcurr+0x3>
 108:	8f b7       	in	r24, 0x3f	; 63
 10a:	80 68       	ori	r24, 0x80	; 128
 10c:	8f bf       	out	0x3f, r24	; 63
 10e:	08 95       	ret

00000110 <__vector_13>:
 110:	1f 92       	push	r1
 112:	0f 92       	push	r0
 114:	0f b6       	in	r0, 0x3f	; 63
 116:	0f 92       	push	r0
 118:	11 24       	eor	r1, r1
 11a:	8f 93       	push	r24
 11c:	9f 93       	push	r25
 11e:	af 93       	push	r26
 120:	bf 93       	push	r27
 122:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <_avr_timer_cntcurr>
 126:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <_avr_timer_cntcurr+0x1>
 12a:	a0 91 2d 01 	lds	r26, 0x012D	; 0x80012d <_avr_timer_cntcurr+0x2>
 12e:	b0 91 2e 01 	lds	r27, 0x012E	; 0x80012e <_avr_timer_cntcurr+0x3>
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	a1 09       	sbc	r26, r1
 136:	b1 09       	sbc	r27, r1
 138:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <_avr_timer_cntcurr>
 13c:	90 93 2c 01 	sts	0x012C, r25	; 0x80012c <_avr_timer_cntcurr+0x1>
 140:	a0 93 2d 01 	sts	0x012D, r26	; 0x80012d <_avr_timer_cntcurr+0x2>
 144:	b0 93 2e 01 	sts	0x012E, r27	; 0x80012e <_avr_timer_cntcurr+0x3>
 148:	89 2b       	or	r24, r25
 14a:	8a 2b       	or	r24, r26
 14c:	8b 2b       	or	r24, r27
 14e:	99 f4       	brne	.+38     	; 0x176 <__vector_13+0x66>
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <TimerFlag>
 156:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 15a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 15e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 162:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 166:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <_avr_timer_cntcurr>
 16a:	90 93 2c 01 	sts	0x012C, r25	; 0x80012c <_avr_timer_cntcurr+0x1>
 16e:	a0 93 2d 01 	sts	0x012D, r26	; 0x80012d <_avr_timer_cntcurr+0x2>
 172:	b0 93 2e 01 	sts	0x012E, r27	; 0x80012e <_avr_timer_cntcurr+0x3>
 176:	bf 91       	pop	r27
 178:	af 91       	pop	r26
 17a:	9f 91       	pop	r25
 17c:	8f 91       	pop	r24
 17e:	0f 90       	pop	r0
 180:	0f be       	out	0x3f, r0	; 63
 182:	0f 90       	pop	r0
 184:	1f 90       	pop	r1
 186:	18 95       	reti

00000188 <TimerSet>:
 188:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 18c:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 190:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 194:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
 198:	60 93 2b 01 	sts	0x012B, r22	; 0x80012b <_avr_timer_cntcurr>
 19c:	70 93 2c 01 	sts	0x012C, r23	; 0x80012c <_avr_timer_cntcurr+0x1>
 1a0:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <_avr_timer_cntcurr+0x2>
 1a4:	90 93 2e 01 	sts	0x012E, r25	; 0x80012e <_avr_timer_cntcurr+0x3>
 1a8:	08 95       	ret

000001aa <set_PWM>:
 1aa:	cf 92       	push	r12
 1ac:	df 92       	push	r13
 1ae:	ef 92       	push	r14
 1b0:	ff 92       	push	r15
 1b2:	6b 01       	movw	r12, r22
 1b4:	7c 01       	movw	r14, r24
 1b6:	9b 01       	movw	r18, r22
 1b8:	ac 01       	movw	r20, r24
 1ba:	60 91 24 01 	lds	r22, 0x0124	; 0x800124 <__data_end>
 1be:	70 91 25 01 	lds	r23, 0x0125	; 0x800125 <__data_end+0x1>
 1c2:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__data_end+0x2>
 1c6:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <__data_end+0x3>
 1ca:	a9 d1       	rcall	.+850    	; 0x51e <__cmpsf2>
 1cc:	88 23       	and	r24, r24
 1ce:	09 f4       	brne	.+2      	; 0x1d2 <set_PWM+0x28>
 1d0:	52 c0       	rjmp	.+164    	; 0x276 <set_PWM+0xcc>
 1d2:	20 e0       	ldi	r18, 0x00	; 0
 1d4:	30 e0       	ldi	r19, 0x00	; 0
 1d6:	a9 01       	movw	r20, r18
 1d8:	c7 01       	movw	r24, r14
 1da:	b6 01       	movw	r22, r12
 1dc:	a0 d1       	rcall	.+832    	; 0x51e <__cmpsf2>
 1de:	81 11       	cpse	r24, r1
 1e0:	06 c0       	rjmp	.+12     	; 0x1ee <set_PWM+0x44>
 1e2:	e1 e9       	ldi	r30, 0x91	; 145
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	80 81       	ld	r24, Z
 1e8:	88 70       	andi	r24, 0x08	; 8
 1ea:	80 83       	st	Z, r24
 1ec:	05 c0       	rjmp	.+10     	; 0x1f8 <set_PWM+0x4e>
 1ee:	e1 e9       	ldi	r30, 0x91	; 145
 1f0:	f0 e0       	ldi	r31, 0x00	; 0
 1f2:	80 81       	ld	r24, Z
 1f4:	83 60       	ori	r24, 0x03	; 3
 1f6:	80 83       	st	Z, r24
 1f8:	28 e5       	ldi	r18, 0x58	; 88
 1fa:	39 e3       	ldi	r19, 0x39	; 57
 1fc:	44 e7       	ldi	r20, 0x74	; 116
 1fe:	5f e3       	ldi	r21, 0x3F	; 63
 200:	c7 01       	movw	r24, r14
 202:	b6 01       	movw	r22, r12
 204:	8c d1       	rcall	.+792    	; 0x51e <__cmpsf2>
 206:	88 23       	and	r24, r24
 208:	3c f4       	brge	.+14     	; 0x218 <set_PWM+0x6e>
 20a:	8f ef       	ldi	r24, 0xFF	; 255
 20c:	9f ef       	ldi	r25, 0xFF	; 255
 20e:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 212:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 216:	23 c0       	rjmp	.+70     	; 0x25e <set_PWM+0xb4>
 218:	20 e0       	ldi	r18, 0x00	; 0
 21a:	34 e2       	ldi	r19, 0x24	; 36
 21c:	44 ef       	ldi	r20, 0xF4	; 244
 21e:	56 e4       	ldi	r21, 0x46	; 70
 220:	c7 01       	movw	r24, r14
 222:	b6 01       	movw	r22, r12
 224:	8e d2       	rcall	.+1308   	; 0x742 <__gesf2>
 226:	18 16       	cp	r1, r24
 228:	2c f4       	brge	.+10     	; 0x234 <set_PWM+0x8a>
 22a:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 22e:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 232:	15 c0       	rjmp	.+42     	; 0x25e <set_PWM+0xb4>
 234:	20 e0       	ldi	r18, 0x00	; 0
 236:	30 e0       	ldi	r19, 0x00	; 0
 238:	40 e0       	ldi	r20, 0x00	; 0
 23a:	53 e4       	ldi	r21, 0x43	; 67
 23c:	c7 01       	movw	r24, r14
 23e:	b6 01       	movw	r22, r12
 240:	84 d2       	rcall	.+1288   	; 0x74a <__mulsf3>
 242:	9b 01       	movw	r18, r22
 244:	ac 01       	movw	r20, r24
 246:	60 e0       	ldi	r22, 0x00	; 0
 248:	74 e2       	ldi	r23, 0x24	; 36
 24a:	84 ef       	ldi	r24, 0xF4	; 244
 24c:	9a e4       	ldi	r25, 0x4A	; 74
 24e:	6b d1       	rcall	.+726    	; 0x526 <__divsf3>
 250:	d2 d1       	rcall	.+932    	; 0x5f6 <__fixsfsi>
 252:	61 50       	subi	r22, 0x01	; 1
 254:	71 09       	sbc	r23, r1
 256:	70 93 99 00 	sts	0x0099, r23	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 25a:	60 93 98 00 	sts	0x0098, r22	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 25e:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 262:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
 266:	c0 92 24 01 	sts	0x0124, r12	; 0x800124 <__data_end>
 26a:	d0 92 25 01 	sts	0x0125, r13	; 0x800125 <__data_end+0x1>
 26e:	e0 92 26 01 	sts	0x0126, r14	; 0x800126 <__data_end+0x2>
 272:	f0 92 27 01 	sts	0x0127, r15	; 0x800127 <__data_end+0x3>
 276:	ff 90       	pop	r15
 278:	ef 90       	pop	r14
 27a:	df 90       	pop	r13
 27c:	cf 90       	pop	r12
 27e:	08 95       	ret

00000280 <PWM_on>:
 280:	80 e4       	ldi	r24, 0x40	; 64
 282:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 286:	8b e0       	ldi	r24, 0x0B	; 11
 288:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
 28c:	60 e0       	ldi	r22, 0x00	; 0
 28e:	70 e0       	ldi	r23, 0x00	; 0
 290:	cb 01       	movw	r24, r22
 292:	8b cf       	rjmp	.-234    	; 0x1aa <set_PWM>
 294:	08 95       	ret

00000296 <TickFct_BlinkLed>:
unsigned char blinkingLed = 0x00;
const double notes[8] = {261.63, 293.66, 329.63, 349.23, 392.00, 440.00, 493.88, 523.25}; // C4, D4, E4, F4, G4, A4, B4, C5
unsigned char i = 0x00;

void TickFct_BlinkLed() {
	switch(BL_State){
 296:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <BL_State>
 29a:	81 30       	cpi	r24, 0x01	; 1
 29c:	41 f0       	breq	.+16     	; 0x2ae <TickFct_BlinkLed+0x18>
 29e:	18 f0       	brcs	.+6      	; 0x2a6 <TickFct_BlinkLed+0x10>
 2a0:	82 30       	cpi	r24, 0x02	; 2
 2a2:	49 f0       	breq	.+18     	; 0x2b6 <TickFct_BlinkLed+0x20>
 2a4:	0c c0       	rjmp	.+24     	; 0x2be <TickFct_BlinkLed+0x28>
		case BL_SMStart:
		BL_State = BL_LedOff;
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <BL_State>
		break;
 2ac:	11 c0       	rjmp	.+34     	; 0x2d0 <TickFct_BlinkLed+0x3a>
		
		case BL_LedOff:
		BL_State = BL_LedOn;
 2ae:	82 e0       	ldi	r24, 0x02	; 2
 2b0:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <BL_State>
 2b4:	10 c0       	rjmp	.+32     	; 0x2d6 <TickFct_BlinkLed+0x40>
		break;
		
		case BL_LedOn:
		BL_State = BL_LedOff;
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <BL_State>
		break;
 2bc:	09 c0       	rjmp	.+18     	; 0x2d0 <TickFct_BlinkLed+0x3a>
		
		default:
		break;
	}
	
	switch(BL_State){
 2be:	81 30       	cpi	r24, 0x01	; 1
 2c0:	39 f0       	breq	.+14     	; 0x2d0 <TickFct_BlinkLed+0x3a>
 2c2:	18 f0       	brcs	.+6      	; 0x2ca <TickFct_BlinkLed+0x34>
 2c4:	82 30       	cpi	r24, 0x02	; 2
 2c6:	51 f4       	brne	.+20     	; 0x2dc <TickFct_BlinkLed+0x46>
 2c8:	06 c0       	rjmp	.+12     	; 0x2d6 <TickFct_BlinkLed+0x40>
		case BL_SMStart:
		blinkingLed = 0x00;
 2ca:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <blinkingLed>
		break;
 2ce:	08 95       	ret
		
		case BL_LedOff:
		blinkingLed = 0x00;
 2d0:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <blinkingLed>
		break;
 2d4:	08 95       	ret
		
		case BL_LedOn:
		blinkingLed = 0x01;
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <blinkingLed>
 2dc:	08 95       	ret

000002de <TickFct_ThreeLeds>:
		break;
	}
}

void TickFct_ThreeLeds() {
	switch(TL_State){
 2de:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <TL_State>
 2e2:	81 30       	cpi	r24, 0x01	; 1
 2e4:	51 f0       	breq	.+20     	; 0x2fa <TickFct_ThreeLeds+0x1c>
 2e6:	28 f0       	brcs	.+10     	; 0x2f2 <TickFct_ThreeLeds+0x14>
 2e8:	82 30       	cpi	r24, 0x02	; 2
 2ea:	59 f0       	breq	.+22     	; 0x302 <TickFct_ThreeLeds+0x24>
 2ec:	83 30       	cpi	r24, 0x03	; 3
 2ee:	69 f0       	breq	.+26     	; 0x30a <TickFct_ThreeLeds+0x2c>
 2f0:	10 c0       	rjmp	.+32     	; 0x312 <TickFct_ThreeLeds+0x34>
		case TL_SMStart:
		TL_State = TL_T0;
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <TL_State>
		break;
 2f8:	17 c0       	rjmp	.+46     	; 0x328 <TickFct_ThreeLeds+0x4a>
		
		case TL_T0:
		TL_State = TL_T1;
 2fa:	82 e0       	ldi	r24, 0x02	; 2
 2fc:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <TL_State>
 300:	17 c0       	rjmp	.+46     	; 0x330 <TickFct_ThreeLeds+0x52>
		break;
		
		case TL_T1:
		TL_State = TL_T2;
 302:	83 e0       	ldi	r24, 0x03	; 3
 304:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <TL_State>
 308:	17 c0       	rjmp	.+46     	; 0x338 <TickFct_ThreeLeds+0x5a>
		break;
		
		case TL_T2:
		TL_State = TL_T0;
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <TL_State>
		break;
 310:	0b c0       	rjmp	.+22     	; 0x328 <TickFct_ThreeLeds+0x4a>
		
		default:
		break;
	}
	
	switch(TL_State){
 312:	81 30       	cpi	r24, 0x01	; 1
 314:	49 f0       	breq	.+18     	; 0x328 <TickFct_ThreeLeds+0x4a>
 316:	28 f0       	brcs	.+10     	; 0x322 <TickFct_ThreeLeds+0x44>
 318:	82 30       	cpi	r24, 0x02	; 2
 31a:	51 f0       	breq	.+20     	; 0x330 <TickFct_ThreeLeds+0x52>
 31c:	83 30       	cpi	r24, 0x03	; 3
 31e:	79 f4       	brne	.+30     	; 0x33e <TickFct_ThreeLeds+0x60>
 320:	0b c0       	rjmp	.+22     	; 0x338 <TickFct_ThreeLeds+0x5a>
		case TL_SMStart:
		threeLed = 0x00;
 322:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <threeLed>
		break;
 326:	08 95       	ret
		
		case TL_T0:
		threeLed = 0x01;
 328:	81 e0       	ldi	r24, 0x01	; 1
 32a:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <threeLed>
		break;
 32e:	08 95       	ret
		
		case TL_T1:
		threeLed = 0x02;
 330:	82 e0       	ldi	r24, 0x02	; 2
 332:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <threeLed>
		break;
 336:	08 95       	ret
		
		case TL_T2:
		threeLed = 0x04;
 338:	84 e0       	ldi	r24, 0x04	; 4
 33a:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <threeLed>
 33e:	08 95       	ret

00000340 <TickFct_CombineLeds>:
		break;
	}
}

void TickFct_CombineLeds() {
	switch(CL_State){
 340:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <CL_State>
 344:	88 23       	and	r24, r24
 346:	19 f0       	breq	.+6      	; 0x34e <TickFct_CombineLeds+0xe>
 348:	81 30       	cpi	r24, 0x01	; 1
 34a:	61 f0       	breq	.+24     	; 0x364 <TickFct_CombineLeds+0x24>
 34c:	04 c0       	rjmp	.+8      	; 0x356 <TickFct_CombineLeds+0x16>
		case CL_SMStart:
		CL_State = Combine;
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <CL_State>
		break;
 354:	07 c0       	rjmp	.+14     	; 0x364 <TickFct_CombineLeds+0x24>
		
		default:
		break;
	}
	
	switch(CL_State){
 356:	88 23       	and	r24, r24
 358:	19 f0       	breq	.+6      	; 0x360 <TickFct_CombineLeds+0x20>
 35a:	81 30       	cpi	r24, 0x01	; 1
 35c:	61 f4       	brne	.+24     	; 0x376 <TickFct_CombineLeds+0x36>
 35e:	02 c0       	rjmp	.+4      	; 0x364 <TickFct_CombineLeds+0x24>
		case CL_SMStart:
		PORTB = 0x00;
 360:	15 b8       	out	0x05, r1	; 5
		break;
 362:	08 95       	ret
		
		case Combine:
		PORTB = (blinkingLed << 3) | threeLed;
 364:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <blinkingLed>
 368:	88 0f       	add	r24, r24
 36a:	88 0f       	add	r24, r24
 36c:	88 0f       	add	r24, r24
 36e:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <threeLed>
 372:	89 2b       	or	r24, r25
 374:	85 b9       	out	0x05, r24	; 5
 376:	08 95       	ret

00000378 <TickFct_Speaker>:
		break;
	}
}

void TickFct_Speaker() {
	switch(S_State) {
 378:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <S_State>
 37c:	81 30       	cpi	r24, 0x01	; 1
 37e:	41 f0       	breq	.+16     	; 0x390 <TickFct_Speaker+0x18>
 380:	18 f0       	brcs	.+6      	; 0x388 <TickFct_Speaker+0x10>
 382:	82 30       	cpi	r24, 0x02	; 2
 384:	59 f0       	breq	.+22     	; 0x39c <TickFct_Speaker+0x24>
 386:	10 c0       	rjmp	.+32     	; 0x3a8 <TickFct_Speaker+0x30>
		case S_SMStart:
		S_State = S_Off;
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <S_State>
		break;
 38e:	11 c0       	rjmp	.+34     	; 0x3b2 <TickFct_Speaker+0x3a>
		
		case S_Off:
		if(switch_A2){
 390:	02 99       	sbic	0x00, 2	; 0
 392:	0f c0       	rjmp	.+30     	; 0x3b2 <TickFct_Speaker+0x3a>
		S_State = S_On;
 394:	82 e0       	ldi	r24, 0x02	; 2
 396:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <S_State>
 39a:	10 c0       	rjmp	.+32     	; 0x3bc <TickFct_Speaker+0x44>
		S_State = S_Off;
		}
		break;
		
		case S_On:
		if(!switch_A2){
 39c:	02 9b       	sbis	0x00, 2	; 0
 39e:	0e c0       	rjmp	.+28     	; 0x3bc <TickFct_Speaker+0x44>
		S_State = S_Off;
 3a0:	81 e0       	ldi	r24, 0x01	; 1
 3a2:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <S_State>
 3a6:	05 c0       	rjmp	.+10     	; 0x3b2 <TickFct_Speaker+0x3a>
		
		default:
		break;
	}
	
	switch(S_State) {
 3a8:	81 30       	cpi	r24, 0x01	; 1
 3aa:	19 f0       	breq	.+6      	; 0x3b2 <TickFct_Speaker+0x3a>
 3ac:	82 30       	cpi	r24, 0x02	; 2
 3ae:	31 f0       	breq	.+12     	; 0x3bc <TickFct_Speaker+0x44>
 3b0:	08 95       	ret
		case S_SMStart:
		break;
		
		case S_Off:
		set_PWM(0);
 3b2:	60 e0       	ldi	r22, 0x00	; 0
 3b4:	70 e0       	ldi	r23, 0x00	; 0
 3b6:	cb 01       	movw	r24, r22
 3b8:	f8 ce       	rjmp	.-528    	; 0x1aa <set_PWM>
		break;
 3ba:	08 95       	ret
		
		case S_On:
		set_PWM(notes[i]);
 3bc:	e0 91 28 01 	lds	r30, 0x0128	; 0x800128 <i>
 3c0:	f0 e0       	ldi	r31, 0x00	; 0
 3c2:	ee 0f       	add	r30, r30
 3c4:	ff 1f       	adc	r31, r31
 3c6:	ee 0f       	add	r30, r30
 3c8:	ff 1f       	adc	r31, r31
 3ca:	ec 5f       	subi	r30, 0xFC	; 252
 3cc:	fe 4f       	sbci	r31, 0xFE	; 254
 3ce:	60 81       	ld	r22, Z
 3d0:	71 81       	ldd	r23, Z+1	; 0x01
 3d2:	82 81       	ldd	r24, Z+2	; 0x02
 3d4:	93 81       	ldd	r25, Z+3	; 0x03
 3d6:	e9 ce       	rjmp	.-558    	; 0x1aa <set_PWM>
 3d8:	08 95       	ret

000003da <TickFct_Pitch>:
		break;
	}
}

void TickFct_Pitch() {
	switch(P_State) {
 3da:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <P_State>
 3de:	82 30       	cpi	r24, 0x02	; 2
 3e0:	e1 f0       	breq	.+56     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3e2:	28 f4       	brcc	.+10     	; 0x3ee <TickFct_Pitch+0x14>
 3e4:	88 23       	and	r24, r24
 3e6:	49 f0       	breq	.+18     	; 0x3fa <TickFct_Pitch+0x20>
 3e8:	81 30       	cpi	r24, 0x01	; 1
 3ea:	59 f0       	breq	.+22     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3ec:	2a c0       	rjmp	.+84     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 3ee:	84 30       	cpi	r24, 0x04	; 4
 3f0:	f1 f0       	breq	.+60     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 3f2:	b8 f0       	brcs	.+46     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 3f4:	85 30       	cpi	r24, 0x05	; 5
 3f6:	f9 f0       	breq	.+62     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 3f8:	24 c0       	rjmp	.+72     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
		case S_SMStart:
		P_State = P_Wait;
 3fa:	81 e0       	ldi	r24, 0x01	; 1
 3fc:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <P_State>
		break;
 400:	08 95       	ret
		case P_Wait:
		if(button_A0){
 402:	00 99       	sbic	0x00, 0	; 0
 404:	04 c0       	rjmp	.+8      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
		P_State = P_WaitUp;
 406:	83 e0       	ldi	r24, 0x03	; 3
 408:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <P_State>
 40c:	08 95       	ret
		}
		else if(button_A1){
 40e:	01 99       	sbic	0x00, 1	; 0
 410:	30 c0       	rjmp	.+96     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
		P_State = P_WaitDown;
 412:	85 e0       	ldi	r24, 0x05	; 5
 414:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <P_State>
 418:	08 95       	ret
		P_State = P_Wait;
		}
		break;
		
		case P_Up:
		P_State = P_Wait;
 41a:	81 e0       	ldi	r24, 0x01	; 1
 41c:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <P_State>
		break;
 420:	08 95       	ret
		
		case P_WaitUp:
		if(button_A0){
 422:	00 9b       	sbis	0x00, 0	; 0
 424:	26 c0       	rjmp	.+76     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
		P_State = P_WaitUp;
		}
		else{
		P_State = P_Up;
 426:	82 e0       	ldi	r24, 0x02	; 2
 428:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <P_State>
 42c:	13 c0       	rjmp	.+38     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
		}
		break;
		
		case P_Down:
		P_State = P_Wait;
 42e:	81 e0       	ldi	r24, 0x01	; 1
 430:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <P_State>
		break;
 434:	08 95       	ret
		
		case P_WaitDown:
		if(button_A1){
 436:	01 9b       	sbis	0x00, 1	; 0
 438:	1c c0       	rjmp	.+56     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
		P_State = P_WaitDown;
		}
		else{
		P_State = P_Down;
 43a:	84 e0       	ldi	r24, 0x04	; 4
 43c:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <P_State>
 440:	11 c0       	rjmp	.+34     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
		
		default:
		break;
	}
	
	switch(P_State) {
 442:	82 30       	cpi	r24, 0x02	; 2
 444:	39 f0       	breq	.+14     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 446:	84 30       	cpi	r24, 0x04	; 4
 448:	69 f0       	breq	.+26     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 44a:	81 11       	cpse	r24, r1
 44c:	12 c0       	rjmp	.+36     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
		case S_SMStart:
		i = 0;
 44e:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <i>
		break;
 452:	08 95       	ret
		
		case P_Wait:
		break;
		
		case P_Up:
		if(i < 7){
 454:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <i>
 458:	87 30       	cpi	r24, 0x07	; 7
 45a:	58 f4       	brcc	.+22     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
		i++;
 45c:	8f 5f       	subi	r24, 0xFF	; 255
 45e:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <i>
 462:	08 95       	ret
		
		case P_WaitUp:
		break;
		
		case P_Down:
		if(i > 0){
 464:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <i>
 468:	88 23       	and	r24, r24
 46a:	19 f0       	breq	.+6      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
		i--;
 46c:	81 50       	subi	r24, 0x01	; 1
 46e:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <i>
 472:	08 95       	ret

00000474 <main>:
	}
}

int main(void)
{
	DDRA = 0x00; PORTA = 0xFF; // Configure port A's 8 pins as inputs, initialize to 0s
 474:	11 b8       	out	0x01, r1	; 1
 476:	8f ef       	ldi	r24, 0xFF	; 255
 478:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00; // Configure port B's 8 pins as outputs, initialize to 0s
 47a:	84 b9       	out	0x04, r24	; 4
 47c:	15 b8       	out	0x05, r1	; 5
	unsigned long BL_elapsedTime = 1000;
	unsigned long TL_elapsedTime = 300;
	unsigned long S_elapsedTime = 2;
	const unsigned long timerPeriod = 1;
	
	TimerSet(timerPeriod);
 47e:	61 e0       	ldi	r22, 0x01	; 1
 480:	70 e0       	ldi	r23, 0x00	; 0
 482:	80 e0       	ldi	r24, 0x00	; 0
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	80 de       	rcall	.-768    	; 0x188 <TimerSet>
	TimerOn();
 488:	1f de       	rcall	.-962    	; 0xc8 <TimerOn>
	PWM_on();
 48a:	fa de       	rcall	.-524    	; 0x280 <PWM_on>
 48c:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <BL_State>
	BL_State = BL_SMStart;
 490:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <TL_State>
	TL_State = TL_SMStart;
 494:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <CL_State>
	CL_State = CL_SMStart;
 498:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <S_State>
	S_State = S_SMStart;
 49c:	0f 2e       	mov	r0, r31
{
	DDRA = 0x00; PORTA = 0xFF; // Configure port A's 8 pins as inputs, initialize to 0s
	DDRB = 0xFF; PORTB = 0x00; // Configure port B's 8 pins as outputs, initialize to 0s
	
	unsigned long BL_elapsedTime = 1000;
	unsigned long TL_elapsedTime = 300;
 49e:	fc e2       	ldi	r31, 0x2C	; 44
 4a0:	cf 2e       	mov	r12, r31
 4a2:	dd 24       	eor	r13, r13
 4a4:	d3 94       	inc	r13
 4a6:	e1 2c       	mov	r14, r1
 4a8:	f1 2c       	mov	r15, r1
 4aa:	f0 2d       	mov	r31, r0
 4ac:	0f 2e       	mov	r0, r31
int main(void)
{
	DDRA = 0x00; PORTA = 0xFF; // Configure port A's 8 pins as inputs, initialize to 0s
	DDRB = 0xFF; PORTB = 0x00; // Configure port B's 8 pins as outputs, initialize to 0s
	
	unsigned long BL_elapsedTime = 1000;
 4ae:	f8 ee       	ldi	r31, 0xE8	; 232
 4b0:	8f 2e       	mov	r8, r31
 4b2:	f3 e0       	ldi	r31, 0x03	; 3
 4b4:	9f 2e       	mov	r9, r31
 4b6:	a1 2c       	mov	r10, r1
 4b8:	b1 2c       	mov	r11, r1
 4ba:	f0 2d       	mov	r31, r0
 4bc:	88 ee       	ldi	r24, 0xE8	; 232
	CL_State = CL_SMStart;
	S_State = S_SMStart;
	
	// Start Execution Here
	while (1) {
		if (BL_elapsedTime >= 1000) { // 1000 ms period
 4be:	88 16       	cp	r8, r24
 4c0:	83 e0       	ldi	r24, 0x03	; 3
 4c2:	98 06       	cpc	r9, r24
 4c4:	a1 04       	cpc	r10, r1
 4c6:	b1 04       	cpc	r11, r1
 4c8:	20 f0       	brcs	.+8      	; 0x4d2 <main+0x5e>
			TickFct_BlinkLed(); // Execute one tick of the BlinkLed synchSM
 4ca:	e5 de       	rcall	.-566    	; 0x296 <TickFct_BlinkLed>
 4cc:	81 2c       	mov	r8, r1
			BL_elapsedTime = 0;
 4ce:	91 2c       	mov	r9, r1
 4d0:	54 01       	movw	r10, r8
 4d2:	8c e2       	ldi	r24, 0x2C	; 44
		}
		if (TL_elapsedTime >= 300) { // 300 ms period
 4d4:	c8 16       	cp	r12, r24
 4d6:	81 e0       	ldi	r24, 0x01	; 1
 4d8:	d8 06       	cpc	r13, r24
 4da:	e1 04       	cpc	r14, r1
 4dc:	f1 04       	cpc	r15, r1
 4de:	28 f0       	brcs	.+10     	; 0x4ea <main+0x76>
			TickFct_ThreeLeds(); // Execute one tick of the ThreeLeds synchSM
 4e0:	fe de       	rcall	.-516    	; 0x2de <TickFct_ThreeLeds>
 4e2:	c1 2c       	mov	r12, r1
			TL_elapsedTime = 0;
 4e4:	d1 2c       	mov	r13, r1
 4e6:	76 01       	movw	r14, r12
 4e8:	07 c0       	rjmp	.+14     	; 0x4f8 <main+0x84>
 4ea:	82 e0       	ldi	r24, 0x02	; 2
		}
		if (TL_elapsedTime >= 2) { // 2 ms period
 4ec:	c8 16       	cp	r12, r24
 4ee:	d1 04       	cpc	r13, r1
 4f0:	e1 04       	cpc	r14, r1
			TickFct_Speaker(); // Execute one tick of the Speaker synchSM
 4f2:	f1 04       	cpc	r15, r1
 4f4:	08 f0       	brcs	.+2      	; 0x4f8 <main+0x84>
			S_elapsedTime = 0;
		}
		TickFct_CombineLeds();
 4f6:	40 df       	rcall	.-384    	; 0x378 <TickFct_Speaker>
 4f8:	23 df       	rcall	.-442    	; 0x340 <TickFct_CombineLeds>
		TickFct_Pitch();
 4fa:	6f df       	rcall	.-290    	; 0x3da <TickFct_Pitch>
 4fc:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <TimerFlag>
		while (!TimerFlag){}   // Wait for timer period
 500:	88 23       	and	r24, r24
 502:	e1 f3       	breq	.-8      	; 0x4fc <main+0x88>
 504:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <TimerFlag>
		TimerFlag = 0;         // Lower flag raised by timer
 508:	8f ef       	ldi	r24, 0xFF	; 255
		BL_elapsedTime += timerPeriod;
 50a:	88 1a       	sub	r8, r24
 50c:	98 0a       	sbc	r9, r24
 50e:	a8 0a       	sbc	r10, r24
 510:	b8 0a       	sbc	r11, r24
 512:	8f ef       	ldi	r24, 0xFF	; 255
		TL_elapsedTime += timerPeriod;
 514:	c8 1a       	sub	r12, r24
 516:	d8 0a       	sbc	r13, r24
 518:	e8 0a       	sbc	r14, r24
 51a:	f8 0a       	sbc	r15, r24
 51c:	cf cf       	rjmp	.-98     	; 0x4bc <main+0x48>

0000051e <__cmpsf2>:
		S_elapsedTime += timerPeriod;
	}
 51e:	9c d0       	rcall	.+312    	; 0x658 <__fp_cmp>
 520:	08 f4       	brcc	.+2      	; 0x524 <__cmpsf2+0x6>
 522:	81 e0       	ldi	r24, 0x01	; 1
 524:	08 95       	ret

00000526 <__divsf3>:
 526:	0c d0       	rcall	.+24     	; 0x540 <__divsf3x>
 528:	d2 c0       	rjmp	.+420    	; 0x6ce <__fp_round>
 52a:	ca d0       	rcall	.+404    	; 0x6c0 <__fp_pscB>
 52c:	40 f0       	brcs	.+16     	; 0x53e <__divsf3+0x18>
 52e:	c1 d0       	rcall	.+386    	; 0x6b2 <__fp_pscA>
 530:	30 f0       	brcs	.+12     	; 0x53e <__divsf3+0x18>
 532:	21 f4       	brne	.+8      	; 0x53c <__divsf3+0x16>
 534:	5f 3f       	cpi	r21, 0xFF	; 255
 536:	19 f0       	breq	.+6      	; 0x53e <__divsf3+0x18>
 538:	b3 c0       	rjmp	.+358    	; 0x6a0 <__fp_inf>
 53a:	51 11       	cpse	r21, r1
 53c:	fc c0       	rjmp	.+504    	; 0x736 <__fp_szero>
 53e:	b6 c0       	rjmp	.+364    	; 0x6ac <__fp_nan>

00000540 <__divsf3x>:
 540:	d7 d0       	rcall	.+430    	; 0x6f0 <__fp_split3>
 542:	98 f3       	brcs	.-26     	; 0x52a <__divsf3+0x4>

00000544 <__divsf3_pse>:
 544:	99 23       	and	r25, r25
 546:	c9 f3       	breq	.-14     	; 0x53a <__divsf3+0x14>
 548:	55 23       	and	r21, r21
 54a:	b1 f3       	breq	.-20     	; 0x538 <__divsf3+0x12>
 54c:	95 1b       	sub	r25, r21
 54e:	55 0b       	sbc	r21, r21
 550:	bb 27       	eor	r27, r27
 552:	aa 27       	eor	r26, r26
 554:	62 17       	cp	r22, r18
 556:	73 07       	cpc	r23, r19
 558:	84 07       	cpc	r24, r20
 55a:	38 f0       	brcs	.+14     	; 0x56a <__divsf3_pse+0x26>
 55c:	9f 5f       	subi	r25, 0xFF	; 255
 55e:	5f 4f       	sbci	r21, 0xFF	; 255
 560:	22 0f       	add	r18, r18
 562:	33 1f       	adc	r19, r19
 564:	44 1f       	adc	r20, r20
 566:	aa 1f       	adc	r26, r26
 568:	a9 f3       	breq	.-22     	; 0x554 <__divsf3_pse+0x10>
 56a:	33 d0       	rcall	.+102    	; 0x5d2 <__divsf3_pse+0x8e>
 56c:	0e 2e       	mov	r0, r30
 56e:	3a f0       	brmi	.+14     	; 0x57e <__divsf3_pse+0x3a>
 570:	e0 e8       	ldi	r30, 0x80	; 128
 572:	30 d0       	rcall	.+96     	; 0x5d4 <__divsf3_pse+0x90>
 574:	91 50       	subi	r25, 0x01	; 1
 576:	50 40       	sbci	r21, 0x00	; 0
 578:	e6 95       	lsr	r30
 57a:	00 1c       	adc	r0, r0
 57c:	ca f7       	brpl	.-14     	; 0x570 <__divsf3_pse+0x2c>
 57e:	29 d0       	rcall	.+82     	; 0x5d2 <__divsf3_pse+0x8e>
 580:	fe 2f       	mov	r31, r30
 582:	27 d0       	rcall	.+78     	; 0x5d2 <__divsf3_pse+0x8e>
 584:	66 0f       	add	r22, r22
 586:	77 1f       	adc	r23, r23
 588:	88 1f       	adc	r24, r24
 58a:	bb 1f       	adc	r27, r27
 58c:	26 17       	cp	r18, r22
 58e:	37 07       	cpc	r19, r23
 590:	48 07       	cpc	r20, r24
 592:	ab 07       	cpc	r26, r27
 594:	b0 e8       	ldi	r27, 0x80	; 128
 596:	09 f0       	breq	.+2      	; 0x59a <__divsf3_pse+0x56>
 598:	bb 0b       	sbc	r27, r27
 59a:	80 2d       	mov	r24, r0
 59c:	bf 01       	movw	r22, r30
 59e:	ff 27       	eor	r31, r31
 5a0:	93 58       	subi	r25, 0x83	; 131
 5a2:	5f 4f       	sbci	r21, 0xFF	; 255
 5a4:	2a f0       	brmi	.+10     	; 0x5b0 <__divsf3_pse+0x6c>
 5a6:	9e 3f       	cpi	r25, 0xFE	; 254
 5a8:	51 05       	cpc	r21, r1
 5aa:	68 f0       	brcs	.+26     	; 0x5c6 <__divsf3_pse+0x82>
 5ac:	79 c0       	rjmp	.+242    	; 0x6a0 <__fp_inf>
 5ae:	c3 c0       	rjmp	.+390    	; 0x736 <__fp_szero>
 5b0:	5f 3f       	cpi	r21, 0xFF	; 255
 5b2:	ec f3       	brlt	.-6      	; 0x5ae <__divsf3_pse+0x6a>
 5b4:	98 3e       	cpi	r25, 0xE8	; 232
 5b6:	dc f3       	brlt	.-10     	; 0x5ae <__divsf3_pse+0x6a>
 5b8:	86 95       	lsr	r24
 5ba:	77 95       	ror	r23
 5bc:	67 95       	ror	r22
 5be:	b7 95       	ror	r27
 5c0:	f7 95       	ror	r31
 5c2:	9f 5f       	subi	r25, 0xFF	; 255
 5c4:	c9 f7       	brne	.-14     	; 0x5b8 <__divsf3_pse+0x74>
 5c6:	88 0f       	add	r24, r24
 5c8:	91 1d       	adc	r25, r1
 5ca:	96 95       	lsr	r25
 5cc:	87 95       	ror	r24
 5ce:	97 f9       	bld	r25, 7
 5d0:	08 95       	ret
 5d2:	e1 e0       	ldi	r30, 0x01	; 1
 5d4:	66 0f       	add	r22, r22
 5d6:	77 1f       	adc	r23, r23
 5d8:	88 1f       	adc	r24, r24
 5da:	bb 1f       	adc	r27, r27
 5dc:	62 17       	cp	r22, r18
 5de:	73 07       	cpc	r23, r19
 5e0:	84 07       	cpc	r24, r20
 5e2:	ba 07       	cpc	r27, r26
 5e4:	20 f0       	brcs	.+8      	; 0x5ee <__divsf3_pse+0xaa>
 5e6:	62 1b       	sub	r22, r18
 5e8:	73 0b       	sbc	r23, r19
 5ea:	84 0b       	sbc	r24, r20
 5ec:	ba 0b       	sbc	r27, r26
 5ee:	ee 1f       	adc	r30, r30
 5f0:	88 f7       	brcc	.-30     	; 0x5d4 <__divsf3_pse+0x90>
 5f2:	e0 95       	com	r30
 5f4:	08 95       	ret

000005f6 <__fixsfsi>:
 5f6:	04 d0       	rcall	.+8      	; 0x600 <__fixunssfsi>
 5f8:	68 94       	set
 5fa:	b1 11       	cpse	r27, r1
 5fc:	9c c0       	rjmp	.+312    	; 0x736 <__fp_szero>
 5fe:	08 95       	ret

00000600 <__fixunssfsi>:
 600:	7f d0       	rcall	.+254    	; 0x700 <__fp_splitA>
 602:	88 f0       	brcs	.+34     	; 0x626 <__fixunssfsi+0x26>
 604:	9f 57       	subi	r25, 0x7F	; 127
 606:	90 f0       	brcs	.+36     	; 0x62c <__fixunssfsi+0x2c>
 608:	b9 2f       	mov	r27, r25
 60a:	99 27       	eor	r25, r25
 60c:	b7 51       	subi	r27, 0x17	; 23
 60e:	a0 f0       	brcs	.+40     	; 0x638 <__fixunssfsi+0x38>
 610:	d1 f0       	breq	.+52     	; 0x646 <__fixunssfsi+0x46>
 612:	66 0f       	add	r22, r22
 614:	77 1f       	adc	r23, r23
 616:	88 1f       	adc	r24, r24
 618:	99 1f       	adc	r25, r25
 61a:	1a f0       	brmi	.+6      	; 0x622 <__fixunssfsi+0x22>
 61c:	ba 95       	dec	r27
 61e:	c9 f7       	brne	.-14     	; 0x612 <__fixunssfsi+0x12>
 620:	12 c0       	rjmp	.+36     	; 0x646 <__fixunssfsi+0x46>
 622:	b1 30       	cpi	r27, 0x01	; 1
 624:	81 f0       	breq	.+32     	; 0x646 <__fixunssfsi+0x46>
 626:	86 d0       	rcall	.+268    	; 0x734 <__fp_zero>
 628:	b1 e0       	ldi	r27, 0x01	; 1
 62a:	08 95       	ret
 62c:	83 c0       	rjmp	.+262    	; 0x734 <__fp_zero>
 62e:	67 2f       	mov	r22, r23
 630:	78 2f       	mov	r23, r24
 632:	88 27       	eor	r24, r24
 634:	b8 5f       	subi	r27, 0xF8	; 248
 636:	39 f0       	breq	.+14     	; 0x646 <__fixunssfsi+0x46>
 638:	b9 3f       	cpi	r27, 0xF9	; 249
 63a:	cc f3       	brlt	.-14     	; 0x62e <__fixunssfsi+0x2e>
 63c:	86 95       	lsr	r24
 63e:	77 95       	ror	r23
 640:	67 95       	ror	r22
 642:	b3 95       	inc	r27
 644:	d9 f7       	brne	.-10     	; 0x63c <__fixunssfsi+0x3c>
 646:	3e f4       	brtc	.+14     	; 0x656 <__fixunssfsi+0x56>
 648:	90 95       	com	r25
 64a:	80 95       	com	r24
 64c:	70 95       	com	r23
 64e:	61 95       	neg	r22
 650:	7f 4f       	sbci	r23, 0xFF	; 255
 652:	8f 4f       	sbci	r24, 0xFF	; 255
 654:	9f 4f       	sbci	r25, 0xFF	; 255
 656:	08 95       	ret

00000658 <__fp_cmp>:
 658:	99 0f       	add	r25, r25
 65a:	00 08       	sbc	r0, r0
 65c:	55 0f       	add	r21, r21
 65e:	aa 0b       	sbc	r26, r26
 660:	e0 e8       	ldi	r30, 0x80	; 128
 662:	fe ef       	ldi	r31, 0xFE	; 254
 664:	16 16       	cp	r1, r22
 666:	17 06       	cpc	r1, r23
 668:	e8 07       	cpc	r30, r24
 66a:	f9 07       	cpc	r31, r25
 66c:	c0 f0       	brcs	.+48     	; 0x69e <__fp_cmp+0x46>
 66e:	12 16       	cp	r1, r18
 670:	13 06       	cpc	r1, r19
 672:	e4 07       	cpc	r30, r20
 674:	f5 07       	cpc	r31, r21
 676:	98 f0       	brcs	.+38     	; 0x69e <__fp_cmp+0x46>
 678:	62 1b       	sub	r22, r18
 67a:	73 0b       	sbc	r23, r19
 67c:	84 0b       	sbc	r24, r20
 67e:	95 0b       	sbc	r25, r21
 680:	39 f4       	brne	.+14     	; 0x690 <__fp_cmp+0x38>
 682:	0a 26       	eor	r0, r26
 684:	61 f0       	breq	.+24     	; 0x69e <__fp_cmp+0x46>
 686:	23 2b       	or	r18, r19
 688:	24 2b       	or	r18, r20
 68a:	25 2b       	or	r18, r21
 68c:	21 f4       	brne	.+8      	; 0x696 <__fp_cmp+0x3e>
 68e:	08 95       	ret
 690:	0a 26       	eor	r0, r26
 692:	09 f4       	brne	.+2      	; 0x696 <__fp_cmp+0x3e>
 694:	a1 40       	sbci	r26, 0x01	; 1
 696:	a6 95       	lsr	r26
 698:	8f ef       	ldi	r24, 0xFF	; 255
 69a:	81 1d       	adc	r24, r1
 69c:	81 1d       	adc	r24, r1
 69e:	08 95       	ret

000006a0 <__fp_inf>:
 6a0:	97 f9       	bld	r25, 7
 6a2:	9f 67       	ori	r25, 0x7F	; 127
 6a4:	80 e8       	ldi	r24, 0x80	; 128
 6a6:	70 e0       	ldi	r23, 0x00	; 0
 6a8:	60 e0       	ldi	r22, 0x00	; 0
 6aa:	08 95       	ret

000006ac <__fp_nan>:
 6ac:	9f ef       	ldi	r25, 0xFF	; 255
 6ae:	80 ec       	ldi	r24, 0xC0	; 192
 6b0:	08 95       	ret

000006b2 <__fp_pscA>:
 6b2:	00 24       	eor	r0, r0
 6b4:	0a 94       	dec	r0
 6b6:	16 16       	cp	r1, r22
 6b8:	17 06       	cpc	r1, r23
 6ba:	18 06       	cpc	r1, r24
 6bc:	09 06       	cpc	r0, r25
 6be:	08 95       	ret

000006c0 <__fp_pscB>:
 6c0:	00 24       	eor	r0, r0
 6c2:	0a 94       	dec	r0
 6c4:	12 16       	cp	r1, r18
 6c6:	13 06       	cpc	r1, r19
 6c8:	14 06       	cpc	r1, r20
 6ca:	05 06       	cpc	r0, r21
 6cc:	08 95       	ret

000006ce <__fp_round>:
 6ce:	09 2e       	mov	r0, r25
 6d0:	03 94       	inc	r0
 6d2:	00 0c       	add	r0, r0
 6d4:	11 f4       	brne	.+4      	; 0x6da <__fp_round+0xc>
 6d6:	88 23       	and	r24, r24
 6d8:	52 f0       	brmi	.+20     	; 0x6ee <__fp_round+0x20>
 6da:	bb 0f       	add	r27, r27
 6dc:	40 f4       	brcc	.+16     	; 0x6ee <__fp_round+0x20>
 6de:	bf 2b       	or	r27, r31
 6e0:	11 f4       	brne	.+4      	; 0x6e6 <__fp_round+0x18>
 6e2:	60 ff       	sbrs	r22, 0
 6e4:	04 c0       	rjmp	.+8      	; 0x6ee <__fp_round+0x20>
 6e6:	6f 5f       	subi	r22, 0xFF	; 255
 6e8:	7f 4f       	sbci	r23, 0xFF	; 255
 6ea:	8f 4f       	sbci	r24, 0xFF	; 255
 6ec:	9f 4f       	sbci	r25, 0xFF	; 255
 6ee:	08 95       	ret

000006f0 <__fp_split3>:
 6f0:	57 fd       	sbrc	r21, 7
 6f2:	90 58       	subi	r25, 0x80	; 128
 6f4:	44 0f       	add	r20, r20
 6f6:	55 1f       	adc	r21, r21
 6f8:	59 f0       	breq	.+22     	; 0x710 <__fp_splitA+0x10>
 6fa:	5f 3f       	cpi	r21, 0xFF	; 255
 6fc:	71 f0       	breq	.+28     	; 0x71a <__fp_splitA+0x1a>
 6fe:	47 95       	ror	r20

00000700 <__fp_splitA>:
 700:	88 0f       	add	r24, r24
 702:	97 fb       	bst	r25, 7
 704:	99 1f       	adc	r25, r25
 706:	61 f0       	breq	.+24     	; 0x720 <__fp_splitA+0x20>
 708:	9f 3f       	cpi	r25, 0xFF	; 255
 70a:	79 f0       	breq	.+30     	; 0x72a <__fp_splitA+0x2a>
 70c:	87 95       	ror	r24
 70e:	08 95       	ret
 710:	12 16       	cp	r1, r18
 712:	13 06       	cpc	r1, r19
 714:	14 06       	cpc	r1, r20
 716:	55 1f       	adc	r21, r21
 718:	f2 cf       	rjmp	.-28     	; 0x6fe <__fp_split3+0xe>
 71a:	46 95       	lsr	r20
 71c:	f1 df       	rcall	.-30     	; 0x700 <__fp_splitA>
 71e:	08 c0       	rjmp	.+16     	; 0x730 <__fp_splitA+0x30>
 720:	16 16       	cp	r1, r22
 722:	17 06       	cpc	r1, r23
 724:	18 06       	cpc	r1, r24
 726:	99 1f       	adc	r25, r25
 728:	f1 cf       	rjmp	.-30     	; 0x70c <__fp_splitA+0xc>
 72a:	86 95       	lsr	r24
 72c:	71 05       	cpc	r23, r1
 72e:	61 05       	cpc	r22, r1
 730:	08 94       	sec
 732:	08 95       	ret

00000734 <__fp_zero>:
 734:	e8 94       	clt

00000736 <__fp_szero>:
 736:	bb 27       	eor	r27, r27
 738:	66 27       	eor	r22, r22
 73a:	77 27       	eor	r23, r23
 73c:	cb 01       	movw	r24, r22
 73e:	97 f9       	bld	r25, 7
 740:	08 95       	ret

00000742 <__gesf2>:
 742:	8a df       	rcall	.-236    	; 0x658 <__fp_cmp>
 744:	08 f4       	brcc	.+2      	; 0x748 <__gesf2+0x6>
 746:	8f ef       	ldi	r24, 0xFF	; 255
 748:	08 95       	ret

0000074a <__mulsf3>:
 74a:	0b d0       	rcall	.+22     	; 0x762 <__mulsf3x>
 74c:	c0 cf       	rjmp	.-128    	; 0x6ce <__fp_round>
 74e:	b1 df       	rcall	.-158    	; 0x6b2 <__fp_pscA>
 750:	28 f0       	brcs	.+10     	; 0x75c <__mulsf3+0x12>
 752:	b6 df       	rcall	.-148    	; 0x6c0 <__fp_pscB>
 754:	18 f0       	brcs	.+6      	; 0x75c <__mulsf3+0x12>
 756:	95 23       	and	r25, r21
 758:	09 f0       	breq	.+2      	; 0x75c <__mulsf3+0x12>
 75a:	a2 cf       	rjmp	.-188    	; 0x6a0 <__fp_inf>
 75c:	a7 cf       	rjmp	.-178    	; 0x6ac <__fp_nan>
 75e:	11 24       	eor	r1, r1
 760:	ea cf       	rjmp	.-44     	; 0x736 <__fp_szero>

00000762 <__mulsf3x>:
 762:	c6 df       	rcall	.-116    	; 0x6f0 <__fp_split3>
 764:	a0 f3       	brcs	.-24     	; 0x74e <__mulsf3+0x4>

00000766 <__mulsf3_pse>:
 766:	95 9f       	mul	r25, r21
 768:	d1 f3       	breq	.-12     	; 0x75e <__mulsf3+0x14>
 76a:	95 0f       	add	r25, r21
 76c:	50 e0       	ldi	r21, 0x00	; 0
 76e:	55 1f       	adc	r21, r21
 770:	62 9f       	mul	r22, r18
 772:	f0 01       	movw	r30, r0
 774:	72 9f       	mul	r23, r18
 776:	bb 27       	eor	r27, r27
 778:	f0 0d       	add	r31, r0
 77a:	b1 1d       	adc	r27, r1
 77c:	63 9f       	mul	r22, r19
 77e:	aa 27       	eor	r26, r26
 780:	f0 0d       	add	r31, r0
 782:	b1 1d       	adc	r27, r1
 784:	aa 1f       	adc	r26, r26
 786:	64 9f       	mul	r22, r20
 788:	66 27       	eor	r22, r22
 78a:	b0 0d       	add	r27, r0
 78c:	a1 1d       	adc	r26, r1
 78e:	66 1f       	adc	r22, r22
 790:	82 9f       	mul	r24, r18
 792:	22 27       	eor	r18, r18
 794:	b0 0d       	add	r27, r0
 796:	a1 1d       	adc	r26, r1
 798:	62 1f       	adc	r22, r18
 79a:	73 9f       	mul	r23, r19
 79c:	b0 0d       	add	r27, r0
 79e:	a1 1d       	adc	r26, r1
 7a0:	62 1f       	adc	r22, r18
 7a2:	83 9f       	mul	r24, r19
 7a4:	a0 0d       	add	r26, r0
 7a6:	61 1d       	adc	r22, r1
 7a8:	22 1f       	adc	r18, r18
 7aa:	74 9f       	mul	r23, r20
 7ac:	33 27       	eor	r19, r19
 7ae:	a0 0d       	add	r26, r0
 7b0:	61 1d       	adc	r22, r1
 7b2:	23 1f       	adc	r18, r19
 7b4:	84 9f       	mul	r24, r20
 7b6:	60 0d       	add	r22, r0
 7b8:	21 1d       	adc	r18, r1
 7ba:	82 2f       	mov	r24, r18
 7bc:	76 2f       	mov	r23, r22
 7be:	6a 2f       	mov	r22, r26
 7c0:	11 24       	eor	r1, r1
 7c2:	9f 57       	subi	r25, 0x7F	; 127
 7c4:	50 40       	sbci	r21, 0x00	; 0
 7c6:	8a f0       	brmi	.+34     	; 0x7ea <__mulsf3_pse+0x84>
 7c8:	e1 f0       	breq	.+56     	; 0x802 <__mulsf3_pse+0x9c>
 7ca:	88 23       	and	r24, r24
 7cc:	4a f0       	brmi	.+18     	; 0x7e0 <__mulsf3_pse+0x7a>
 7ce:	ee 0f       	add	r30, r30
 7d0:	ff 1f       	adc	r31, r31
 7d2:	bb 1f       	adc	r27, r27
 7d4:	66 1f       	adc	r22, r22
 7d6:	77 1f       	adc	r23, r23
 7d8:	88 1f       	adc	r24, r24
 7da:	91 50       	subi	r25, 0x01	; 1
 7dc:	50 40       	sbci	r21, 0x00	; 0
 7de:	a9 f7       	brne	.-22     	; 0x7ca <__mulsf3_pse+0x64>
 7e0:	9e 3f       	cpi	r25, 0xFE	; 254
 7e2:	51 05       	cpc	r21, r1
 7e4:	70 f0       	brcs	.+28     	; 0x802 <__mulsf3_pse+0x9c>
 7e6:	5c cf       	rjmp	.-328    	; 0x6a0 <__fp_inf>
 7e8:	a6 cf       	rjmp	.-180    	; 0x736 <__fp_szero>
 7ea:	5f 3f       	cpi	r21, 0xFF	; 255
 7ec:	ec f3       	brlt	.-6      	; 0x7e8 <__mulsf3_pse+0x82>
 7ee:	98 3e       	cpi	r25, 0xE8	; 232
 7f0:	dc f3       	brlt	.-10     	; 0x7e8 <__mulsf3_pse+0x82>
 7f2:	86 95       	lsr	r24
 7f4:	77 95       	ror	r23
 7f6:	67 95       	ror	r22
 7f8:	b7 95       	ror	r27
 7fa:	f7 95       	ror	r31
 7fc:	e7 95       	ror	r30
 7fe:	9f 5f       	subi	r25, 0xFF	; 255
 800:	c1 f7       	brne	.-16     	; 0x7f2 <__mulsf3_pse+0x8c>
 802:	fe 2b       	or	r31, r30
 804:	88 0f       	add	r24, r24
 806:	91 1d       	adc	r25, r1
 808:	96 95       	lsr	r25
 80a:	87 95       	ror	r24
 80c:	97 f9       	bld	r25, 7
 80e:	08 95       	ret

00000810 <_exit>:
 810:	f8 94       	cli

00000812 <__stop_program>:
 812:	ff cf       	rjmp	.-2      	; 0x812 <__stop_program>
