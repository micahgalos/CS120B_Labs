
mgalo001_lab11_part3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000526  000005ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000526  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800104  00800104  000005be  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005be  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000630  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fbb  00000000  00000000  000006d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009b6  00000000  00000000  00001693  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000766  00000000  00000000  00002049  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000188  00000000  00000000  000027b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000596  00000000  00000000  00002938  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005c8  00000000  00000000  00002ece  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00003496  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	67 c0       	rjmp	.+206    	; 0xd0 <__ctors_end>
   2:	00 00       	nop
   4:	82 c0       	rjmp	.+260    	; 0x10a <__bad_interrupt>
   6:	00 00       	nop
   8:	80 c0       	rjmp	.+256    	; 0x10a <__bad_interrupt>
   a:	00 00       	nop
   c:	7e c0       	rjmp	.+252    	; 0x10a <__bad_interrupt>
   e:	00 00       	nop
  10:	7c c0       	rjmp	.+248    	; 0x10a <__bad_interrupt>
  12:	00 00       	nop
  14:	7a c0       	rjmp	.+244    	; 0x10a <__bad_interrupt>
  16:	00 00       	nop
  18:	78 c0       	rjmp	.+240    	; 0x10a <__bad_interrupt>
  1a:	00 00       	nop
  1c:	76 c0       	rjmp	.+236    	; 0x10a <__bad_interrupt>
  1e:	00 00       	nop
  20:	74 c0       	rjmp	.+232    	; 0x10a <__bad_interrupt>
  22:	00 00       	nop
  24:	72 c0       	rjmp	.+228    	; 0x10a <__bad_interrupt>
  26:	00 00       	nop
  28:	70 c0       	rjmp	.+224    	; 0x10a <__bad_interrupt>
  2a:	00 00       	nop
  2c:	6e c0       	rjmp	.+220    	; 0x10a <__bad_interrupt>
  2e:	00 00       	nop
  30:	6c c0       	rjmp	.+216    	; 0x10a <__bad_interrupt>
  32:	00 00       	nop
  34:	8f c0       	rjmp	.+286    	; 0x154 <__vector_13>
  36:	00 00       	nop
  38:	68 c0       	rjmp	.+208    	; 0x10a <__bad_interrupt>
  3a:	00 00       	nop
  3c:	66 c0       	rjmp	.+204    	; 0x10a <__bad_interrupt>
  3e:	00 00       	nop
  40:	64 c0       	rjmp	.+200    	; 0x10a <__bad_interrupt>
  42:	00 00       	nop
  44:	62 c0       	rjmp	.+196    	; 0x10a <__bad_interrupt>
  46:	00 00       	nop
  48:	60 c0       	rjmp	.+192    	; 0x10a <__bad_interrupt>
  4a:	00 00       	nop
  4c:	5e c0       	rjmp	.+188    	; 0x10a <__bad_interrupt>
  4e:	00 00       	nop
  50:	5c c0       	rjmp	.+184    	; 0x10a <__bad_interrupt>
  52:	00 00       	nop
  54:	5a c0       	rjmp	.+180    	; 0x10a <__bad_interrupt>
  56:	00 00       	nop
  58:	58 c0       	rjmp	.+176    	; 0x10a <__bad_interrupt>
  5a:	00 00       	nop
  5c:	56 c0       	rjmp	.+172    	; 0x10a <__bad_interrupt>
  5e:	00 00       	nop
  60:	54 c0       	rjmp	.+168    	; 0x10a <__bad_interrupt>
  62:	00 00       	nop
  64:	52 c0       	rjmp	.+164    	; 0x10a <__bad_interrupt>
  66:	00 00       	nop
  68:	50 c0       	rjmp	.+160    	; 0x10a <__bad_interrupt>
  6a:	00 00       	nop
  6c:	4e c0       	rjmp	.+156    	; 0x10a <__bad_interrupt>
  6e:	00 00       	nop
  70:	4c c0       	rjmp	.+152    	; 0x10a <__bad_interrupt>
  72:	00 00       	nop
  74:	4a c0       	rjmp	.+148    	; 0x10a <__bad_interrupt>
  76:	00 00       	nop
  78:	48 c0       	rjmp	.+144    	; 0x10a <__bad_interrupt>
  7a:	00 00       	nop
  7c:	46 c0       	rjmp	.+140    	; 0x10a <__bad_interrupt>
  7e:	00 00       	nop
  80:	44 c0       	rjmp	.+136    	; 0x10a <__bad_interrupt>
  82:	00 00       	nop
  84:	42 c0       	rjmp	.+132    	; 0x10a <__bad_interrupt>
  86:	00 00       	nop
  88:	40 c0       	rjmp	.+128    	; 0x10a <__bad_interrupt>
  8a:	00 00       	nop
  8c:	26 02       	muls	r18, r22
  8e:	2f 02       	muls	r18, r31
  90:	2f 02       	muls	r18, r31
  92:	2f 02       	muls	r18, r31
  94:	2f 02       	muls	r18, r31
  96:	2f 02       	muls	r18, r31
  98:	2f 02       	muls	r18, r31
  9a:	13 02       	muls	r17, r19
  9c:	2f 02       	muls	r18, r31
  9e:	2f 02       	muls	r18, r31
  a0:	2f 02       	muls	r18, r31
  a2:	2f 02       	muls	r18, r31
  a4:	2f 02       	muls	r18, r31
  a6:	1d 02       	muls	r17, r29
  a8:	92 01       	movw	r18, r4
  aa:	9b 01       	movw	r18, r22
  ac:	a5 01       	movw	r20, r10
  ae:	af 01       	movw	r20, r30
  b0:	b9 01       	movw	r22, r18
  b2:	c3 01       	movw	r24, r6
  b4:	cd 01       	movw	r24, r26
  b6:	d7 01       	movw	r26, r14
  b8:	e1 01       	movw	r28, r2
  ba:	2f 02       	muls	r18, r31
  bc:	2f 02       	muls	r18, r31
  be:	2f 02       	muls	r18, r31
  c0:	2f 02       	muls	r18, r31
  c2:	2f 02       	muls	r18, r31
  c4:	2f 02       	muls	r18, r31
  c6:	2f 02       	muls	r18, r31
  c8:	eb 01       	movw	r28, r22
  ca:	f5 01       	movw	r30, r10
  cc:	ff 01       	movw	r30, r30
  ce:	09 02       	muls	r16, r25

000000d0 <__ctors_end>:
  d0:	11 24       	eor	r1, r1
  d2:	1f be       	out	0x3f, r1	; 63
  d4:	cf ef       	ldi	r28, 0xFF	; 255
  d6:	d0 e4       	ldi	r29, 0x40	; 64
  d8:	de bf       	out	0x3e, r29	; 62
  da:	cd bf       	out	0x3d, r28	; 61

000000dc <__do_copy_data>:
  dc:	11 e0       	ldi	r17, 0x01	; 1
  de:	a0 e0       	ldi	r26, 0x00	; 0
  e0:	b1 e0       	ldi	r27, 0x01	; 1
  e2:	e6 e2       	ldi	r30, 0x26	; 38
  e4:	f5 e0       	ldi	r31, 0x05	; 5
  e6:	00 e0       	ldi	r16, 0x00	; 0
  e8:	0b bf       	out	0x3b, r16	; 59
  ea:	02 c0       	rjmp	.+4      	; 0xf0 <__do_copy_data+0x14>
  ec:	07 90       	elpm	r0, Z+
  ee:	0d 92       	st	X+, r0
  f0:	a4 30       	cpi	r26, 0x04	; 4
  f2:	b1 07       	cpc	r27, r17
  f4:	d9 f7       	brne	.-10     	; 0xec <__do_copy_data+0x10>

000000f6 <__do_clear_bss>:
  f6:	21 e0       	ldi	r18, 0x01	; 1
  f8:	a4 e0       	ldi	r26, 0x04	; 4
  fa:	b1 e0       	ldi	r27, 0x01	; 1
  fc:	01 c0       	rjmp	.+2      	; 0x100 <.do_clear_bss_start>

000000fe <.do_clear_bss_loop>:
  fe:	1d 92       	st	X+, r1

00000100 <.do_clear_bss_start>:
 100:	a5 31       	cpi	r26, 0x15	; 21
 102:	b2 07       	cpc	r27, r18
 104:	e1 f7       	brne	.-8      	; 0xfe <.do_clear_bss_loop>
 106:	b2 d1       	rcall	.+868    	; 0x46c <main>
 108:	0c c2       	rjmp	.+1048   	; 0x522 <_exit>

0000010a <__bad_interrupt>:
 10a:	7a cf       	rjmp	.-268    	; 0x0 <__vectors>

0000010c <TimerOn>:
		if( c == 0 ) { return b; }
		a = b;
		b = c;
	}
	return 0;
}
 10c:	8b e0       	ldi	r24, 0x0B	; 11
 10e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 112:	8d e7       	ldi	r24, 0x7D	; 125
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 11a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 11e:	82 e0       	ldi	r24, 0x02	; 2
 120:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 124:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 128:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 12c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 130:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 134:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 138:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 13c:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <_avr_timer_cntcurr>
 140:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <_avr_timer_cntcurr+0x1>
 144:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <_avr_timer_cntcurr+0x2>
 148:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <_avr_timer_cntcurr+0x3>
 14c:	8f b7       	in	r24, 0x3f	; 63
 14e:	80 68       	ori	r24, 0x80	; 128
 150:	8f bf       	out	0x3f, r24	; 63
 152:	08 95       	ret

00000154 <__vector_13>:
 154:	1f 92       	push	r1
 156:	0f 92       	push	r0
 158:	0f b6       	in	r0, 0x3f	; 63
 15a:	0f 92       	push	r0
 15c:	11 24       	eor	r1, r1
 15e:	8f 93       	push	r24
 160:	9f 93       	push	r25
 162:	af 93       	push	r26
 164:	bf 93       	push	r27
 166:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <_avr_timer_cntcurr>
 16a:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <_avr_timer_cntcurr+0x1>
 16e:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <_avr_timer_cntcurr+0x2>
 172:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <_avr_timer_cntcurr+0x3>
 176:	01 97       	sbiw	r24, 0x01	; 1
 178:	a1 09       	sbc	r26, r1
 17a:	b1 09       	sbc	r27, r1
 17c:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <_avr_timer_cntcurr>
 180:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <_avr_timer_cntcurr+0x1>
 184:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <_avr_timer_cntcurr+0x2>
 188:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <_avr_timer_cntcurr+0x3>
 18c:	89 2b       	or	r24, r25
 18e:	8a 2b       	or	r24, r26
 190:	8b 2b       	or	r24, r27
 192:	99 f4       	brne	.+38     	; 0x1ba <__vector_13+0x66>
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <TimerFlag>
 19a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 19e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 1a2:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 1a6:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 1aa:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <_avr_timer_cntcurr>
 1ae:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <_avr_timer_cntcurr+0x1>
 1b2:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <_avr_timer_cntcurr+0x2>
 1b6:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <_avr_timer_cntcurr+0x3>
 1ba:	bf 91       	pop	r27
 1bc:	af 91       	pop	r26
 1be:	9f 91       	pop	r25
 1c0:	8f 91       	pop	r24
 1c2:	0f 90       	pop	r0
 1c4:	0f be       	out	0x3f, r0	; 63
 1c6:	0f 90       	pop	r0
 1c8:	1f 90       	pop	r1
 1ca:	18 95       	reti

000001cc <TimerSet>:
 1cc:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 1d0:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 1d4:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 1d8:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
 1dc:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <_avr_timer_cntcurr>
 1e0:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <_avr_timer_cntcurr+0x1>
 1e4:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <_avr_timer_cntcurr+0x2>
 1e8:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <_avr_timer_cntcurr+0x3>
 1ec:	08 95       	ret

000001ee <delay_ms>:
 1ee:	18 16       	cp	r1, r24
 1f0:	19 06       	cpc	r1, r25
 1f2:	5c f0       	brlt	.+22     	; 0x20a <delay_ms+0x1c>
 1f4:	08 95       	ret
 1f6:	00 00       	nop
 1f8:	21 50       	subi	r18, 0x01	; 1
 1fa:	31 09       	sbc	r19, r1
 1fc:	e1 f7       	brne	.-8      	; 0x1f6 <delay_ms+0x8>
 1fe:	4f 5f       	subi	r20, 0xFF	; 255
 200:	5f 4f       	sbci	r21, 0xFF	; 255
 202:	84 17       	cp	r24, r20
 204:	95 07       	cpc	r25, r21
 206:	19 f4       	brne	.+6      	; 0x20e <delay_ms+0x20>
 208:	08 95       	ret
 20a:	40 e0       	ldi	r20, 0x00	; 0
 20c:	50 e0       	ldi	r21, 0x00	; 0
 20e:	27 e0       	ldi	r18, 0x07	; 7
 210:	33 e0       	ldi	r19, 0x03	; 3
 212:	f1 cf       	rjmp	.-30     	; 0x1f6 <delay_ms+0x8>

00000214 <LCD_WriteCommand>:
 214:	5e 98       	cbi	0x0b, 6	; 11
 216:	88 b9       	out	0x08, r24	; 8
 218:	5f 9a       	sbi	0x0b, 7	; 11
 21a:	00 00       	nop
 21c:	5f 98       	cbi	0x0b, 7	; 11
 21e:	82 e0       	ldi	r24, 0x02	; 2
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	e5 cf       	rjmp	.-54     	; 0x1ee <delay_ms>
 224:	08 95       	ret

00000226 <LCD_Cursor>:
 226:	81 31       	cpi	r24, 0x11	; 17
 228:	18 f4       	brcc	.+6      	; 0x230 <LCD_Cursor+0xa>
 22a:	81 58       	subi	r24, 0x81	; 129
 22c:	f3 cf       	rjmp	.-26     	; 0x214 <LCD_WriteCommand>
 22e:	08 95       	ret
 230:	81 55       	subi	r24, 0x51	; 81
 232:	f0 cf       	rjmp	.-32     	; 0x214 <LCD_WriteCommand>
 234:	08 95       	ret

00000236 <LCD_init>:
 236:	84 e6       	ldi	r24, 0x64	; 100
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	d9 df       	rcall	.-78     	; 0x1ee <delay_ms>
 23c:	88 e3       	ldi	r24, 0x38	; 56
 23e:	ea df       	rcall	.-44     	; 0x214 <LCD_WriteCommand>
 240:	86 e0       	ldi	r24, 0x06	; 6
 242:	e8 df       	rcall	.-48     	; 0x214 <LCD_WriteCommand>
 244:	8f e0       	ldi	r24, 0x0F	; 15
 246:	e6 df       	rcall	.-52     	; 0x214 <LCD_WriteCommand>
 248:	81 e0       	ldi	r24, 0x01	; 1
 24a:	e4 df       	rcall	.-56     	; 0x214 <LCD_WriteCommand>
 24c:	8a e0       	ldi	r24, 0x0A	; 10
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	ce cf       	rjmp	.-100    	; 0x1ee <delay_ms>
 252:	08 95       	ret

00000254 <LCD_WriteData>:
 254:	5e 9a       	sbi	0x0b, 6	; 11
 256:	88 b9       	out	0x08, r24	; 8
 258:	5f 9a       	sbi	0x0b, 7	; 11
 25a:	00 00       	nop
 25c:	5f 98       	cbi	0x0b, 7	; 11
 25e:	81 e0       	ldi	r24, 0x01	; 1
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	c5 cf       	rjmp	.-118    	; 0x1ee <delay_ms>
 264:	08 95       	ret

00000266 <GetKeypadKey>:
 266:	8f ee       	ldi	r24, 0xEF	; 239
 268:	88 b9       	out	0x08, r24	; 8
 26a:	00 00       	nop
 26c:	30 9b       	sbis	0x06, 0	; 6
 26e:	29 c0       	rjmp	.+82     	; 0x2c2 <GetKeypadKey+0x5c>
 270:	31 9b       	sbis	0x06, 1	; 6
 272:	29 c0       	rjmp	.+82     	; 0x2c6 <GetKeypadKey+0x60>
 274:	32 9b       	sbis	0x06, 2	; 6
 276:	29 c0       	rjmp	.+82     	; 0x2ca <GetKeypadKey+0x64>
 278:	33 9b       	sbis	0x06, 3	; 6
 27a:	29 c0       	rjmp	.+82     	; 0x2ce <GetKeypadKey+0x68>
 27c:	8f ed       	ldi	r24, 0xDF	; 223
 27e:	88 b9       	out	0x08, r24	; 8
 280:	00 00       	nop
 282:	30 9b       	sbis	0x06, 0	; 6
 284:	26 c0       	rjmp	.+76     	; 0x2d2 <GetKeypadKey+0x6c>
 286:	31 9b       	sbis	0x06, 1	; 6
 288:	26 c0       	rjmp	.+76     	; 0x2d6 <GetKeypadKey+0x70>
 28a:	32 9b       	sbis	0x06, 2	; 6
 28c:	26 c0       	rjmp	.+76     	; 0x2da <GetKeypadKey+0x74>
 28e:	33 9b       	sbis	0x06, 3	; 6
 290:	26 c0       	rjmp	.+76     	; 0x2de <GetKeypadKey+0x78>
 292:	8f eb       	ldi	r24, 0xBF	; 191
 294:	88 b9       	out	0x08, r24	; 8
 296:	00 00       	nop
 298:	30 9b       	sbis	0x06, 0	; 6
 29a:	23 c0       	rjmp	.+70     	; 0x2e2 <GetKeypadKey+0x7c>
 29c:	31 9b       	sbis	0x06, 1	; 6
 29e:	23 c0       	rjmp	.+70     	; 0x2e6 <GetKeypadKey+0x80>
 2a0:	32 9b       	sbis	0x06, 2	; 6
 2a2:	23 c0       	rjmp	.+70     	; 0x2ea <GetKeypadKey+0x84>
 2a4:	33 9b       	sbis	0x06, 3	; 6
 2a6:	23 c0       	rjmp	.+70     	; 0x2ee <GetKeypadKey+0x88>
 2a8:	8f e7       	ldi	r24, 0x7F	; 127
 2aa:	88 b9       	out	0x08, r24	; 8
 2ac:	00 00       	nop
 2ae:	30 9b       	sbis	0x06, 0	; 6
 2b0:	20 c0       	rjmp	.+64     	; 0x2f2 <GetKeypadKey+0x8c>
 2b2:	31 9b       	sbis	0x06, 1	; 6
 2b4:	20 c0       	rjmp	.+64     	; 0x2f6 <GetKeypadKey+0x90>
 2b6:	32 9b       	sbis	0x06, 2	; 6
 2b8:	20 c0       	rjmp	.+64     	; 0x2fa <GetKeypadKey+0x94>
 2ba:	33 9b       	sbis	0x06, 3	; 6
 2bc:	20 c0       	rjmp	.+64     	; 0x2fe <GetKeypadKey+0x98>
 2be:	80 e0       	ldi	r24, 0x00	; 0
 2c0:	08 95       	ret
 2c2:	81 e3       	ldi	r24, 0x31	; 49
 2c4:	08 95       	ret
 2c6:	84 e3       	ldi	r24, 0x34	; 52
 2c8:	08 95       	ret
 2ca:	87 e3       	ldi	r24, 0x37	; 55
 2cc:	08 95       	ret
 2ce:	8a e2       	ldi	r24, 0x2A	; 42
 2d0:	08 95       	ret
 2d2:	82 e3       	ldi	r24, 0x32	; 50
 2d4:	08 95       	ret
 2d6:	85 e3       	ldi	r24, 0x35	; 53
 2d8:	08 95       	ret
 2da:	88 e3       	ldi	r24, 0x38	; 56
 2dc:	08 95       	ret
 2de:	80 e3       	ldi	r24, 0x30	; 48
 2e0:	08 95       	ret
 2e2:	83 e3       	ldi	r24, 0x33	; 51
 2e4:	08 95       	ret
 2e6:	86 e3       	ldi	r24, 0x36	; 54
 2e8:	08 95       	ret
 2ea:	89 e3       	ldi	r24, 0x39	; 57
 2ec:	08 95       	ret
 2ee:	83 e2       	ldi	r24, 0x23	; 35
 2f0:	08 95       	ret
 2f2:	81 e4       	ldi	r24, 0x41	; 65
 2f4:	08 95       	ret
 2f6:	82 e4       	ldi	r24, 0x42	; 66
 2f8:	08 95       	ret
 2fa:	83 e4       	ldi	r24, 0x43	; 67
 2fc:	08 95       	ret
 2fe:	84 e4       	ldi	r24, 0x44	; 68
 300:	08 95       	ret

00000302 <SMTick1>:
 302:	cf 93       	push	r28
 304:	df 93       	push	r29
 306:	ec 01       	movw	r28, r24
 308:	ae df       	rcall	.-164    	; 0x266 <GetKeypadKey>
 30a:	20 97       	sbiw	r28, 0x00	; 0
 30c:	09 f0       	breq	.+2      	; 0x310 <SMTick1+0xe>
 30e:	aa c0       	rjmp	.+340    	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	fc 01       	movw	r30, r24
 314:	b3 97       	sbiw	r30, 0x23	; 35
 316:	e2 32       	cpi	r30, 0x22	; 34
 318:	f1 05       	cpc	r31, r1
 31a:	08 f0       	brcs	.+2      	; 0x31e <SMTick1+0x1c>
 31c:	a0 c0       	rjmp	.+320    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 31e:	ea 5b       	subi	r30, 0xBA	; 186
 320:	ff 4f       	sbci	r31, 0xFF	; 255
 322:	f6 c0       	rjmp	.+492    	; 0x510 <__tablejump2__>
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tmpB>
 32a:	7d df       	rcall	.-262    	; 0x226 <LCD_Cursor>
 32c:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tmpB>
 330:	80 5d       	subi	r24, 0xD0	; 208
 332:	90 df       	rcall	.-224    	; 0x254 <LCD_WriteData>
 334:	94 c0       	rjmp	.+296    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 336:	82 e0       	ldi	r24, 0x02	; 2
 338:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tmpB>
 33c:	81 e0       	ldi	r24, 0x01	; 1
 33e:	73 df       	rcall	.-282    	; 0x226 <LCD_Cursor>
 340:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tmpB>
 344:	80 5d       	subi	r24, 0xD0	; 208
 346:	86 df       	rcall	.-244    	; 0x254 <LCD_WriteData>
 348:	8a c0       	rjmp	.+276    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 34a:	83 e0       	ldi	r24, 0x03	; 3
 34c:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tmpB>
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	69 df       	rcall	.-302    	; 0x226 <LCD_Cursor>
 354:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tmpB>
 358:	80 5d       	subi	r24, 0xD0	; 208
 35a:	7c df       	rcall	.-264    	; 0x254 <LCD_WriteData>
 35c:	80 c0       	rjmp	.+256    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 35e:	84 e0       	ldi	r24, 0x04	; 4
 360:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tmpB>
 364:	81 e0       	ldi	r24, 0x01	; 1
 366:	5f df       	rcall	.-322    	; 0x226 <LCD_Cursor>
 368:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tmpB>
 36c:	80 5d       	subi	r24, 0xD0	; 208
 36e:	72 df       	rcall	.-284    	; 0x254 <LCD_WriteData>
 370:	76 c0       	rjmp	.+236    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 372:	85 e0       	ldi	r24, 0x05	; 5
 374:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tmpB>
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	55 df       	rcall	.-342    	; 0x226 <LCD_Cursor>
 37c:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tmpB>
 380:	80 5d       	subi	r24, 0xD0	; 208
 382:	68 df       	rcall	.-304    	; 0x254 <LCD_WriteData>
 384:	6c c0       	rjmp	.+216    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 386:	86 e0       	ldi	r24, 0x06	; 6
 388:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tmpB>
 38c:	81 e0       	ldi	r24, 0x01	; 1
 38e:	4b df       	rcall	.-362    	; 0x226 <LCD_Cursor>
 390:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tmpB>
 394:	80 5d       	subi	r24, 0xD0	; 208
 396:	5e df       	rcall	.-324    	; 0x254 <LCD_WriteData>
 398:	62 c0       	rjmp	.+196    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 39a:	87 e0       	ldi	r24, 0x07	; 7
 39c:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tmpB>
 3a0:	81 e0       	ldi	r24, 0x01	; 1
 3a2:	41 df       	rcall	.-382    	; 0x226 <LCD_Cursor>
 3a4:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tmpB>
 3a8:	80 5d       	subi	r24, 0xD0	; 208
 3aa:	54 df       	rcall	.-344    	; 0x254 <LCD_WriteData>
 3ac:	58 c0       	rjmp	.+176    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 3ae:	88 e0       	ldi	r24, 0x08	; 8
 3b0:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tmpB>
 3b4:	81 e0       	ldi	r24, 0x01	; 1
 3b6:	37 df       	rcall	.-402    	; 0x226 <LCD_Cursor>
 3b8:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tmpB>
 3bc:	80 5d       	subi	r24, 0xD0	; 208
 3be:	4a df       	rcall	.-364    	; 0x254 <LCD_WriteData>
 3c0:	4e c0       	rjmp	.+156    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 3c2:	89 e0       	ldi	r24, 0x09	; 9
 3c4:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tmpB>
 3c8:	81 e0       	ldi	r24, 0x01	; 1
 3ca:	2d df       	rcall	.-422    	; 0x226 <LCD_Cursor>
 3cc:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tmpB>
 3d0:	80 5d       	subi	r24, 0xD0	; 208
 3d2:	40 df       	rcall	.-384    	; 0x254 <LCD_WriteData>
 3d4:	44 c0       	rjmp	.+136    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 3d6:	8a e0       	ldi	r24, 0x0A	; 10
 3d8:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tmpB>
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	23 df       	rcall	.-442    	; 0x226 <LCD_Cursor>
 3e0:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tmpB>
 3e4:	89 5c       	subi	r24, 0xC9	; 201
 3e6:	36 df       	rcall	.-404    	; 0x254 <LCD_WriteData>
 3e8:	3a c0       	rjmp	.+116    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 3ea:	8b e0       	ldi	r24, 0x0B	; 11
 3ec:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tmpB>
 3f0:	81 e0       	ldi	r24, 0x01	; 1
 3f2:	19 df       	rcall	.-462    	; 0x226 <LCD_Cursor>
 3f4:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tmpB>
 3f8:	89 5c       	subi	r24, 0xC9	; 201
 3fa:	2c df       	rcall	.-424    	; 0x254 <LCD_WriteData>
 3fc:	30 c0       	rjmp	.+96     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 3fe:	8c e0       	ldi	r24, 0x0C	; 12
 400:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tmpB>
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	0f df       	rcall	.-482    	; 0x226 <LCD_Cursor>
 408:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tmpB>
 40c:	89 5c       	subi	r24, 0xC9	; 201
 40e:	22 df       	rcall	.-444    	; 0x254 <LCD_WriteData>
 410:	26 c0       	rjmp	.+76     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 412:	8d e0       	ldi	r24, 0x0D	; 13
 414:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tmpB>
 418:	81 e0       	ldi	r24, 0x01	; 1
 41a:	05 df       	rcall	.-502    	; 0x226 <LCD_Cursor>
 41c:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tmpB>
 420:	89 5c       	subi	r24, 0xC9	; 201
 422:	18 df       	rcall	.-464    	; 0x254 <LCD_WriteData>
 424:	1c c0       	rjmp	.+56     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 426:	8e e0       	ldi	r24, 0x0E	; 14
 428:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tmpB>
 42c:	81 e0       	ldi	r24, 0x01	; 1
 42e:	fb de       	rcall	.-522    	; 0x226 <LCD_Cursor>
 430:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tmpB>
 434:	84 5e       	subi	r24, 0xE4	; 228
 436:	0e df       	rcall	.-484    	; 0x254 <LCD_WriteData>
 438:	12 c0       	rjmp	.+36     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 43a:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <tmpB>
 43e:	81 e0       	ldi	r24, 0x01	; 1
 440:	f2 de       	rcall	.-540    	; 0x226 <LCD_Cursor>
 442:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tmpB>
 446:	80 5d       	subi	r24, 0xD0	; 208
 448:	05 df       	rcall	.-502    	; 0x254 <LCD_WriteData>
 44a:	09 c0       	rjmp	.+18     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 44c:	8f e0       	ldi	r24, 0x0F	; 15
 44e:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tmpB>
 452:	81 e0       	ldi	r24, 0x01	; 1
 454:	e8 de       	rcall	.-560    	; 0x226 <LCD_Cursor>
 456:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tmpB>
 45a:	8c 5e       	subi	r24, 0xEC	; 236
 45c:	fb de       	rcall	.-522    	; 0x254 <LCD_WriteData>
 45e:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tmpB>
 462:	85 b9       	out	0x05, r24	; 5
 464:	ce 01       	movw	r24, r28
 466:	df 91       	pop	r29
 468:	cf 91       	pop	r28
 46a:	08 95       	ret

0000046c <main>:

int main()
{
	// Set Data Direction Registers
	// Buttons PORTA[0-7], set AVR PORTA to pull down logic
	DDRA = 0xFF; PORTA = 0x00;
 46c:	8f ef       	ldi	r24, 0xFF	; 255
 46e:	81 b9       	out	0x01, r24	; 1
 470:	12 b8       	out	0x02, r1	; 2
	DDRB = 0xFF; PORTB = 0x00;
 472:	84 b9       	out	0x04, r24	; 4
 474:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xF0; PORTC = 0x0F; // PC7..4 outputs init 0s, PC3..0 inputs init 1s
 476:	90 ef       	ldi	r25, 0xF0	; 240
 478:	97 b9       	out	0x07, r25	; 7
 47a:	9f e0       	ldi	r25, 0x0F	; 15
 47c:	98 b9       	out	0x08, r25	; 8
	DDRD = 0xFF; PORTD = 0x00;
 47e:	8a b9       	out	0x0a, r24	; 10
 480:	1b b8       	out	0x0b, r1	; 11
	static task task1;
	task *tasks[] = { &task1};
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);

	// Task 1
	task1.state = 0;//Task initial state.
 482:	e4 e0       	ldi	r30, 0x04	; 4
 484:	f1 e0       	ldi	r31, 0x01	; 1
 486:	10 82       	st	Z, r1
	task1.period = SMTick1_period;//Task Period.
 488:	8a e0       	ldi	r24, 0x0A	; 10
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	a0 e0       	ldi	r26, 0x00	; 0
 48e:	b0 e0       	ldi	r27, 0x00	; 0
 490:	81 83       	std	Z+1, r24	; 0x01
 492:	92 83       	std	Z+2, r25	; 0x02
 494:	a3 83       	std	Z+3, r26	; 0x03
 496:	b4 83       	std	Z+4, r27	; 0x04
	task1.elapsedTime = SMTick1_period;//Task current elapsed time.
 498:	85 83       	std	Z+5, r24	; 0x05
 49a:	96 83       	std	Z+6, r25	; 0x06
 49c:	a7 83       	std	Z+7, r26	; 0x07
 49e:	b0 87       	std	Z+8, r27	; 0x08
	task1.TickFct = &SMTick1;//Function pointer for the tick.
 4a0:	81 e8       	ldi	r24, 0x81	; 129
 4a2:	91 e0       	ldi	r25, 0x01	; 1
 4a4:	92 87       	std	Z+10, r25	; 0x0a
 4a6:	81 87       	std	Z+9, r24	; 0x09


	// Set the timer and turn it on
	TimerSet(GCD);
 4a8:	61 e0       	ldi	r22, 0x01	; 1
 4aa:	70 e0       	ldi	r23, 0x00	; 0
 4ac:	80 e0       	ldi	r24, 0x00	; 0
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	8d de       	rcall	.-742    	; 0x1cc <TimerSet>
	TimerOn();
 4b2:	2c de       	rcall	.-936    	; 0x10c <TimerOn>
	LCD_init();
 4b4:	c0 de       	rcall	.-640    	; 0x236 <LCD_init>
 4b6:	c4 e0       	ldi	r28, 0x04	; 4
	unsigned short i; // Scheduler for-loop iterator
	while(1) {
		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
			// Task is ready to tick
			if ( tasks[i]->elapsedTime >= tasks[i]->period ) {
 4b8:	d1 e0       	ldi	r29, 0x01	; 1
 4ba:	4d 81       	ldd	r20, Y+5	; 0x05
 4bc:	5e 81       	ldd	r21, Y+6	; 0x06
 4be:	6f 81       	ldd	r22, Y+7	; 0x07
 4c0:	78 85       	ldd	r23, Y+8	; 0x08
 4c2:	89 81       	ldd	r24, Y+1	; 0x01
 4c4:	9a 81       	ldd	r25, Y+2	; 0x02
 4c6:	ab 81       	ldd	r26, Y+3	; 0x03
 4c8:	bc 81       	ldd	r27, Y+4	; 0x04
 4ca:	48 17       	cp	r20, r24
 4cc:	59 07       	cpc	r21, r25
 4ce:	6a 07       	cpc	r22, r26
 4d0:	7b 07       	cpc	r23, r27
 4d2:	60 f0       	brcs	.+24     	; 0x4ec <main+0x80>
 4d4:	88 81       	ld	r24, Y
				// Setting next state for task
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 4d6:	e9 85       	ldd	r30, Y+9	; 0x09
 4d8:	fa 85       	ldd	r31, Y+10	; 0x0a
 4da:	08 2e       	mov	r0, r24
 4dc:	00 0c       	add	r0, r0
 4de:	99 0b       	sbc	r25, r25
 4e0:	09 95       	icall
 4e2:	88 83       	st	Y, r24
 4e4:	1d 82       	std	Y+5, r1	; 0x05
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
 4e6:	1e 82       	std	Y+6, r1	; 0x06
 4e8:	1f 82       	std	Y+7, r1	; 0x07
 4ea:	18 86       	std	Y+8, r1	; 0x08
 4ec:	8d 81       	ldd	r24, Y+5	; 0x05
			}
			tasks[i]->elapsedTime += 1;
 4ee:	9e 81       	ldd	r25, Y+6	; 0x06
 4f0:	af 81       	ldd	r26, Y+7	; 0x07
 4f2:	b8 85       	ldd	r27, Y+8	; 0x08
 4f4:	01 96       	adiw	r24, 0x01	; 1
 4f6:	a1 1d       	adc	r26, r1
 4f8:	b1 1d       	adc	r27, r1
 4fa:	8d 83       	std	Y+5, r24	; 0x05
 4fc:	9e 83       	std	Y+6, r25	; 0x06
 4fe:	af 83       	std	Y+7, r26	; 0x07
 500:	b8 87       	std	Y+8, r27	; 0x08
 502:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <TimerFlag>
		}
		while(!TimerFlag);
 506:	88 23       	and	r24, r24
 508:	e1 f3       	breq	.-8      	; 0x502 <main+0x96>
 50a:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <TimerFlag>
		TimerFlag = 0;
 50e:	d5 cf       	rjmp	.-86     	; 0x4ba <main+0x4e>

00000510 <__tablejump2__>:
	}
 510:	ee 0f       	add	r30, r30
 512:	ff 1f       	adc	r31, r31
 514:	00 24       	eor	r0, r0
 516:	00 1c       	adc	r0, r0
 518:	0b be       	out	0x3b, r0	; 59
 51a:	07 90       	elpm	r0, Z+
 51c:	f6 91       	elpm	r31, Z
 51e:	e0 2d       	mov	r30, r0
 520:	09 94       	ijmp

00000522 <_exit>:
 522:	f8 94       	cli

00000524 <__stop_program>:
 524:	ff cf       	rjmp	.-2      	; 0x524 <__stop_program>
