
mgalo001_lab11_part4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  000005a6  0000063a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005a6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800116  00800116  00000650  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000650  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000680  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  000006c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f6f  00000000  00000000  00000768  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009b6  00000000  00000000  000016d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000077e  00000000  00000000  0000208d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000018c  00000000  00000000  0000280c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000059d  00000000  00000000  00002998  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000685  00000000  00000000  00002f35  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  000035ba  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	67 c0       	rjmp	.+206    	; 0xd0 <__ctors_end>
   2:	00 00       	nop
   4:	82 c0       	rjmp	.+260    	; 0x10a <__bad_interrupt>
   6:	00 00       	nop
   8:	80 c0       	rjmp	.+256    	; 0x10a <__bad_interrupt>
   a:	00 00       	nop
   c:	7e c0       	rjmp	.+252    	; 0x10a <__bad_interrupt>
   e:	00 00       	nop
  10:	7c c0       	rjmp	.+248    	; 0x10a <__bad_interrupt>
  12:	00 00       	nop
  14:	7a c0       	rjmp	.+244    	; 0x10a <__bad_interrupt>
  16:	00 00       	nop
  18:	78 c0       	rjmp	.+240    	; 0x10a <__bad_interrupt>
  1a:	00 00       	nop
  1c:	76 c0       	rjmp	.+236    	; 0x10a <__bad_interrupt>
  1e:	00 00       	nop
  20:	74 c0       	rjmp	.+232    	; 0x10a <__bad_interrupt>
  22:	00 00       	nop
  24:	72 c0       	rjmp	.+228    	; 0x10a <__bad_interrupt>
  26:	00 00       	nop
  28:	70 c0       	rjmp	.+224    	; 0x10a <__bad_interrupt>
  2a:	00 00       	nop
  2c:	6e c0       	rjmp	.+220    	; 0x10a <__bad_interrupt>
  2e:	00 00       	nop
  30:	6c c0       	rjmp	.+216    	; 0x10a <__bad_interrupt>
  32:	00 00       	nop
  34:	8f c0       	rjmp	.+286    	; 0x154 <__vector_13>
  36:	00 00       	nop
  38:	68 c0       	rjmp	.+208    	; 0x10a <__bad_interrupt>
  3a:	00 00       	nop
  3c:	66 c0       	rjmp	.+204    	; 0x10a <__bad_interrupt>
  3e:	00 00       	nop
  40:	64 c0       	rjmp	.+200    	; 0x10a <__bad_interrupt>
  42:	00 00       	nop
  44:	62 c0       	rjmp	.+196    	; 0x10a <__bad_interrupt>
  46:	00 00       	nop
  48:	60 c0       	rjmp	.+192    	; 0x10a <__bad_interrupt>
  4a:	00 00       	nop
  4c:	5e c0       	rjmp	.+188    	; 0x10a <__bad_interrupt>
  4e:	00 00       	nop
  50:	5c c0       	rjmp	.+184    	; 0x10a <__bad_interrupt>
  52:	00 00       	nop
  54:	5a c0       	rjmp	.+180    	; 0x10a <__bad_interrupt>
  56:	00 00       	nop
  58:	58 c0       	rjmp	.+176    	; 0x10a <__bad_interrupt>
  5a:	00 00       	nop
  5c:	56 c0       	rjmp	.+172    	; 0x10a <__bad_interrupt>
  5e:	00 00       	nop
  60:	54 c0       	rjmp	.+168    	; 0x10a <__bad_interrupt>
  62:	00 00       	nop
  64:	52 c0       	rjmp	.+164    	; 0x10a <__bad_interrupt>
  66:	00 00       	nop
  68:	50 c0       	rjmp	.+160    	; 0x10a <__bad_interrupt>
  6a:	00 00       	nop
  6c:	4e c0       	rjmp	.+156    	; 0x10a <__bad_interrupt>
  6e:	00 00       	nop
  70:	4c c0       	rjmp	.+152    	; 0x10a <__bad_interrupt>
  72:	00 00       	nop
  74:	4a c0       	rjmp	.+148    	; 0x10a <__bad_interrupt>
  76:	00 00       	nop
  78:	48 c0       	rjmp	.+144    	; 0x10a <__bad_interrupt>
  7a:	00 00       	nop
  7c:	46 c0       	rjmp	.+140    	; 0x10a <__bad_interrupt>
  7e:	00 00       	nop
  80:	44 c0       	rjmp	.+136    	; 0x10a <__bad_interrupt>
  82:	00 00       	nop
  84:	42 c0       	rjmp	.+132    	; 0x10a <__bad_interrupt>
  86:	00 00       	nop
  88:	40 c0       	rjmp	.+128    	; 0x10a <__bad_interrupt>
  8a:	00 00       	nop
  8c:	59 02       	muls	r21, r25
  8e:	63 02       	muls	r22, r19
  90:	63 02       	muls	r22, r19
  92:	63 02       	muls	r22, r19
  94:	63 02       	muls	r22, r19
  96:	63 02       	muls	r22, r19
  98:	63 02       	muls	r22, r19
  9a:	44 02       	muls	r20, r20
  9c:	63 02       	muls	r22, r19
  9e:	63 02       	muls	r22, r19
  a0:	63 02       	muls	r22, r19
  a2:	63 02       	muls	r22, r19
  a4:	63 02       	muls	r22, r19
  a6:	4f 02       	muls	r20, r31
  a8:	b5 01       	movw	r22, r10
  aa:	c0 01       	movw	r24, r0
  ac:	cb 01       	movw	r24, r22
  ae:	d6 01       	movw	r26, r12
  b0:	e1 01       	movw	r28, r2
  b2:	ec 01       	movw	r28, r24
  b4:	f7 01       	movw	r30, r14
  b6:	02 02       	muls	r16, r18
  b8:	0d 02       	muls	r16, r29
  ba:	63 02       	muls	r22, r19
  bc:	63 02       	muls	r22, r19
  be:	63 02       	muls	r22, r19
  c0:	63 02       	muls	r22, r19
  c2:	63 02       	muls	r22, r19
  c4:	63 02       	muls	r22, r19
  c6:	63 02       	muls	r22, r19
  c8:	18 02       	muls	r17, r24
  ca:	23 02       	muls	r18, r19
  cc:	2e 02       	muls	r18, r30
  ce:	39 02       	muls	r19, r25

000000d0 <__ctors_end>:
  d0:	11 24       	eor	r1, r1
  d2:	1f be       	out	0x3f, r1	; 63
  d4:	cf ef       	ldi	r28, 0xFF	; 255
  d6:	d0 e4       	ldi	r29, 0x40	; 64
  d8:	de bf       	out	0x3e, r29	; 62
  da:	cd bf       	out	0x3d, r28	; 61

000000dc <__do_copy_data>:
  dc:	11 e0       	ldi	r17, 0x01	; 1
  de:	a0 e0       	ldi	r26, 0x00	; 0
  e0:	b1 e0       	ldi	r27, 0x01	; 1
  e2:	e6 ea       	ldi	r30, 0xA6	; 166
  e4:	f5 e0       	ldi	r31, 0x05	; 5
  e6:	00 e0       	ldi	r16, 0x00	; 0
  e8:	0b bf       	out	0x3b, r16	; 59
  ea:	02 c0       	rjmp	.+4      	; 0xf0 <__do_copy_data+0x14>
  ec:	07 90       	elpm	r0, Z+
  ee:	0d 92       	st	X+, r0
  f0:	a6 31       	cpi	r26, 0x16	; 22
  f2:	b1 07       	cpc	r27, r17
  f4:	d9 f7       	brne	.-10     	; 0xec <__do_copy_data+0x10>

000000f6 <__do_clear_bss>:
  f6:	21 e0       	ldi	r18, 0x01	; 1
  f8:	a6 e1       	ldi	r26, 0x16	; 22
  fa:	b1 e0       	ldi	r27, 0x01	; 1
  fc:	01 c0       	rjmp	.+2      	; 0x100 <.do_clear_bss_start>

000000fe <.do_clear_bss_loop>:
  fe:	1d 92       	st	X+, r1

00000100 <.do_clear_bss_start>:
 100:	a7 32       	cpi	r26, 0x27	; 39
 102:	b2 07       	cpc	r27, r18
 104:	e1 f7       	brne	.-8      	; 0xfe <.do_clear_bss_loop>
 106:	ee d1       	rcall	.+988    	; 0x4e4 <main>
 108:	4c c2       	rjmp	.+1176   	; 0x5a2 <_exit>

0000010a <__bad_interrupt>:
 10a:	7a cf       	rjmp	.-268    	; 0x0 <__vectors>

0000010c <TimerOn>:
		if( c == 0 ) { return b; }
		a = b;
		b = c;
	}
	return 0;
}
 10c:	8b e0       	ldi	r24, 0x0B	; 11
 10e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 112:	8d e7       	ldi	r24, 0x7D	; 125
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 11a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 11e:	82 e0       	ldi	r24, 0x02	; 2
 120:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 124:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 128:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 12c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <_avr_timer_M>
 130:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <_avr_timer_M+0x1>
 134:	a0 91 03 01 	lds	r26, 0x0103	; 0x800103 <_avr_timer_M+0x2>
 138:	b0 91 04 01 	lds	r27, 0x0104	; 0x800104 <_avr_timer_M+0x3>
 13c:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <_avr_timer_cntcurr>
 140:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <_avr_timer_cntcurr+0x1>
 144:	a0 93 24 01 	sts	0x0124, r26	; 0x800124 <_avr_timer_cntcurr+0x2>
 148:	b0 93 25 01 	sts	0x0125, r27	; 0x800125 <_avr_timer_cntcurr+0x3>
 14c:	8f b7       	in	r24, 0x3f	; 63
 14e:	80 68       	ori	r24, 0x80	; 128
 150:	8f bf       	out	0x3f, r24	; 63
 152:	08 95       	ret

00000154 <__vector_13>:
 154:	1f 92       	push	r1
 156:	0f 92       	push	r0
 158:	0f b6       	in	r0, 0x3f	; 63
 15a:	0f 92       	push	r0
 15c:	11 24       	eor	r1, r1
 15e:	8f 93       	push	r24
 160:	9f 93       	push	r25
 162:	af 93       	push	r26
 164:	bf 93       	push	r27
 166:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <_avr_timer_cntcurr>
 16a:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <_avr_timer_cntcurr+0x1>
 16e:	a0 91 24 01 	lds	r26, 0x0124	; 0x800124 <_avr_timer_cntcurr+0x2>
 172:	b0 91 25 01 	lds	r27, 0x0125	; 0x800125 <_avr_timer_cntcurr+0x3>
 176:	01 97       	sbiw	r24, 0x01	; 1
 178:	a1 09       	sbc	r26, r1
 17a:	b1 09       	sbc	r27, r1
 17c:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <_avr_timer_cntcurr>
 180:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <_avr_timer_cntcurr+0x1>
 184:	a0 93 24 01 	sts	0x0124, r26	; 0x800124 <_avr_timer_cntcurr+0x2>
 188:	b0 93 25 01 	sts	0x0125, r27	; 0x800125 <_avr_timer_cntcurr+0x3>
 18c:	89 2b       	or	r24, r25
 18e:	8a 2b       	or	r24, r26
 190:	8b 2b       	or	r24, r27
 192:	99 f4       	brne	.+38     	; 0x1ba <__vector_13+0x66>
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <TimerFlag>
 19a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <_avr_timer_M>
 19e:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <_avr_timer_M+0x1>
 1a2:	a0 91 03 01 	lds	r26, 0x0103	; 0x800103 <_avr_timer_M+0x2>
 1a6:	b0 91 04 01 	lds	r27, 0x0104	; 0x800104 <_avr_timer_M+0x3>
 1aa:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <_avr_timer_cntcurr>
 1ae:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <_avr_timer_cntcurr+0x1>
 1b2:	a0 93 24 01 	sts	0x0124, r26	; 0x800124 <_avr_timer_cntcurr+0x2>
 1b6:	b0 93 25 01 	sts	0x0125, r27	; 0x800125 <_avr_timer_cntcurr+0x3>
 1ba:	bf 91       	pop	r27
 1bc:	af 91       	pop	r26
 1be:	9f 91       	pop	r25
 1c0:	8f 91       	pop	r24
 1c2:	0f 90       	pop	r0
 1c4:	0f be       	out	0x3f, r0	; 63
 1c6:	0f 90       	pop	r0
 1c8:	1f 90       	pop	r1
 1ca:	18 95       	reti

000001cc <TimerSet>:
 1cc:	60 93 01 01 	sts	0x0101, r22	; 0x800101 <_avr_timer_M>
 1d0:	70 93 02 01 	sts	0x0102, r23	; 0x800102 <_avr_timer_M+0x1>
 1d4:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <_avr_timer_M+0x2>
 1d8:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <_avr_timer_M+0x3>
 1dc:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <_avr_timer_cntcurr>
 1e0:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <_avr_timer_cntcurr+0x1>
 1e4:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <_avr_timer_cntcurr+0x2>
 1e8:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <_avr_timer_cntcurr+0x3>
 1ec:	08 95       	ret

000001ee <delay_ms>:
 1ee:	18 16       	cp	r1, r24
 1f0:	19 06       	cpc	r1, r25
 1f2:	5c f0       	brlt	.+22     	; 0x20a <delay_ms+0x1c>
 1f4:	08 95       	ret
 1f6:	00 00       	nop
 1f8:	21 50       	subi	r18, 0x01	; 1
 1fa:	31 09       	sbc	r19, r1
 1fc:	e1 f7       	brne	.-8      	; 0x1f6 <delay_ms+0x8>
 1fe:	4f 5f       	subi	r20, 0xFF	; 255
 200:	5f 4f       	sbci	r21, 0xFF	; 255
 202:	84 17       	cp	r24, r20
 204:	95 07       	cpc	r25, r21
 206:	19 f4       	brne	.+6      	; 0x20e <delay_ms+0x20>
 208:	08 95       	ret
 20a:	40 e0       	ldi	r20, 0x00	; 0
 20c:	50 e0       	ldi	r21, 0x00	; 0
 20e:	27 e0       	ldi	r18, 0x07	; 7
 210:	33 e0       	ldi	r19, 0x03	; 3
 212:	f1 cf       	rjmp	.-30     	; 0x1f6 <delay_ms+0x8>

00000214 <LCD_WriteCommand>:
 214:	5e 98       	cbi	0x0b, 6	; 11
 216:	88 b9       	out	0x08, r24	; 8
 218:	5f 9a       	sbi	0x0b, 7	; 11
 21a:	00 00       	nop
 21c:	5f 98       	cbi	0x0b, 7	; 11
 21e:	82 e0       	ldi	r24, 0x02	; 2
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	e5 cf       	rjmp	.-54     	; 0x1ee <delay_ms>
 224:	08 95       	ret

00000226 <LCD_ClearScreen>:
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	f5 cf       	rjmp	.-22     	; 0x214 <LCD_WriteCommand>
 22a:	08 95       	ret

0000022c <LCD_Cursor>:
 22c:	81 31       	cpi	r24, 0x11	; 17
 22e:	18 f4       	brcc	.+6      	; 0x236 <LCD_Cursor+0xa>
 230:	81 58       	subi	r24, 0x81	; 129
 232:	f0 cf       	rjmp	.-32     	; 0x214 <LCD_WriteCommand>
 234:	08 95       	ret
 236:	81 55       	subi	r24, 0x51	; 81
 238:	ed cf       	rjmp	.-38     	; 0x214 <LCD_WriteCommand>
 23a:	08 95       	ret

0000023c <LCD_init>:
 23c:	84 e6       	ldi	r24, 0x64	; 100
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	d6 df       	rcall	.-84     	; 0x1ee <delay_ms>
 242:	88 e3       	ldi	r24, 0x38	; 56
 244:	e7 df       	rcall	.-50     	; 0x214 <LCD_WriteCommand>
 246:	86 e0       	ldi	r24, 0x06	; 6
 248:	e5 df       	rcall	.-54     	; 0x214 <LCD_WriteCommand>
 24a:	8f e0       	ldi	r24, 0x0F	; 15
 24c:	e3 df       	rcall	.-58     	; 0x214 <LCD_WriteCommand>
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	e1 df       	rcall	.-62     	; 0x214 <LCD_WriteCommand>
 252:	8a e0       	ldi	r24, 0x0A	; 10
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	cb cf       	rjmp	.-106    	; 0x1ee <delay_ms>
 258:	08 95       	ret

0000025a <LCD_WriteData>:
 25a:	5e 9a       	sbi	0x0b, 6	; 11
 25c:	88 b9       	out	0x08, r24	; 8
 25e:	5f 9a       	sbi	0x0b, 7	; 11
 260:	00 00       	nop
 262:	5f 98       	cbi	0x0b, 7	; 11
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	c2 cf       	rjmp	.-124    	; 0x1ee <delay_ms>
 26a:	08 95       	ret

0000026c <LCD_DisplayString>:
 26c:	0f 93       	push	r16
 26e:	1f 93       	push	r17
 270:	cf 93       	push	r28
 272:	df 93       	push	r29
 274:	18 2f       	mov	r17, r24
 276:	eb 01       	movw	r28, r22
 278:	d6 df       	rcall	.-84     	; 0x226 <LCD_ClearScreen>
 27a:	88 81       	ld	r24, Y
 27c:	88 23       	and	r24, r24
 27e:	51 f0       	breq	.+20     	; 0x294 <LCD_DisplayString+0x28>
 280:	01 e0       	ldi	r16, 0x01	; 1
 282:	01 0f       	add	r16, r17
 284:	81 2f       	mov	r24, r17
 286:	d2 df       	rcall	.-92     	; 0x22c <LCD_Cursor>
 288:	89 91       	ld	r24, Y+
 28a:	e7 df       	rcall	.-50     	; 0x25a <LCD_WriteData>
 28c:	10 2f       	mov	r17, r16
 28e:	88 81       	ld	r24, Y
 290:	81 11       	cpse	r24, r1
 292:	f6 cf       	rjmp	.-20     	; 0x280 <LCD_DisplayString+0x14>
 294:	df 91       	pop	r29
 296:	cf 91       	pop	r28
 298:	1f 91       	pop	r17
 29a:	0f 91       	pop	r16
 29c:	08 95       	ret

0000029e <GetKeypadKey>:
 29e:	8f ee       	ldi	r24, 0xEF	; 239
 2a0:	88 b9       	out	0x08, r24	; 8
 2a2:	00 00       	nop
 2a4:	30 9b       	sbis	0x06, 0	; 6
 2a6:	29 c0       	rjmp	.+82     	; 0x2fa <GetKeypadKey+0x5c>
 2a8:	31 9b       	sbis	0x06, 1	; 6
 2aa:	29 c0       	rjmp	.+82     	; 0x2fe <GetKeypadKey+0x60>
 2ac:	32 9b       	sbis	0x06, 2	; 6
 2ae:	29 c0       	rjmp	.+82     	; 0x302 <GetKeypadKey+0x64>
 2b0:	33 9b       	sbis	0x06, 3	; 6
 2b2:	29 c0       	rjmp	.+82     	; 0x306 <GetKeypadKey+0x68>
 2b4:	8f ed       	ldi	r24, 0xDF	; 223
 2b6:	88 b9       	out	0x08, r24	; 8
 2b8:	00 00       	nop
 2ba:	30 9b       	sbis	0x06, 0	; 6
 2bc:	26 c0       	rjmp	.+76     	; 0x30a <GetKeypadKey+0x6c>
 2be:	31 9b       	sbis	0x06, 1	; 6
 2c0:	26 c0       	rjmp	.+76     	; 0x30e <GetKeypadKey+0x70>
 2c2:	32 9b       	sbis	0x06, 2	; 6
 2c4:	26 c0       	rjmp	.+76     	; 0x312 <GetKeypadKey+0x74>
 2c6:	33 9b       	sbis	0x06, 3	; 6
 2c8:	26 c0       	rjmp	.+76     	; 0x316 <GetKeypadKey+0x78>
 2ca:	8f eb       	ldi	r24, 0xBF	; 191
 2cc:	88 b9       	out	0x08, r24	; 8
 2ce:	00 00       	nop
 2d0:	30 9b       	sbis	0x06, 0	; 6
 2d2:	23 c0       	rjmp	.+70     	; 0x31a <GetKeypadKey+0x7c>
 2d4:	31 9b       	sbis	0x06, 1	; 6
 2d6:	23 c0       	rjmp	.+70     	; 0x31e <GetKeypadKey+0x80>
 2d8:	32 9b       	sbis	0x06, 2	; 6
 2da:	23 c0       	rjmp	.+70     	; 0x322 <GetKeypadKey+0x84>
 2dc:	33 9b       	sbis	0x06, 3	; 6
 2de:	23 c0       	rjmp	.+70     	; 0x326 <GetKeypadKey+0x88>
 2e0:	8f e7       	ldi	r24, 0x7F	; 127
 2e2:	88 b9       	out	0x08, r24	; 8
 2e4:	00 00       	nop
 2e6:	30 9b       	sbis	0x06, 0	; 6
 2e8:	20 c0       	rjmp	.+64     	; 0x32a <GetKeypadKey+0x8c>
 2ea:	31 9b       	sbis	0x06, 1	; 6
 2ec:	20 c0       	rjmp	.+64     	; 0x32e <GetKeypadKey+0x90>
 2ee:	32 9b       	sbis	0x06, 2	; 6
 2f0:	20 c0       	rjmp	.+64     	; 0x332 <GetKeypadKey+0x94>
 2f2:	33 9b       	sbis	0x06, 3	; 6
 2f4:	20 c0       	rjmp	.+64     	; 0x336 <GetKeypadKey+0x98>
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	08 95       	ret
 2fa:	81 e3       	ldi	r24, 0x31	; 49
 2fc:	08 95       	ret
 2fe:	84 e3       	ldi	r24, 0x34	; 52
 300:	08 95       	ret
 302:	87 e3       	ldi	r24, 0x37	; 55
 304:	08 95       	ret
 306:	8a e2       	ldi	r24, 0x2A	; 42
 308:	08 95       	ret
 30a:	82 e3       	ldi	r24, 0x32	; 50
 30c:	08 95       	ret
 30e:	85 e3       	ldi	r24, 0x35	; 53
 310:	08 95       	ret
 312:	88 e3       	ldi	r24, 0x38	; 56
 314:	08 95       	ret
 316:	80 e3       	ldi	r24, 0x30	; 48
 318:	08 95       	ret
 31a:	83 e3       	ldi	r24, 0x33	; 51
 31c:	08 95       	ret
 31e:	86 e3       	ldi	r24, 0x36	; 54
 320:	08 95       	ret
 322:	89 e3       	ldi	r24, 0x39	; 57
 324:	08 95       	ret
 326:	83 e2       	ldi	r24, 0x23	; 35
 328:	08 95       	ret
 32a:	81 e4       	ldi	r24, 0x41	; 65
 32c:	08 95       	ret
 32e:	82 e4       	ldi	r24, 0x42	; 66
 330:	08 95       	ret
 332:	83 e4       	ldi	r24, 0x43	; 67
 334:	08 95       	ret
 336:	84 e4       	ldi	r24, 0x44	; 68
 338:	08 95       	ret

0000033a <SMTick1>:
 33a:	0f 93       	push	r16
 33c:	1f 93       	push	r17
 33e:	cf 93       	push	r28
 340:	8c 01       	movw	r16, r24
 342:	ad df       	rcall	.-166    	; 0x29e <GetKeypadKey>
 344:	c8 2f       	mov	r28, r24
 346:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 34a:	70 df       	rcall	.-288    	; 0x22c <LCD_Cursor>
 34c:	01 15       	cp	r16, r1
 34e:	11 05       	cpc	r17, r1
 350:	09 f0       	breq	.+2      	; 0x354 <SMTick1+0x1a>
 352:	c3 c0       	rjmp	.+390    	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 354:	8c 2f       	mov	r24, r28
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	fc 01       	movw	r30, r24
 35a:	b3 97       	sbiw	r30, 0x23	; 35
 35c:	e2 32       	cpi	r30, 0x22	; 34
 35e:	f1 05       	cpc	r31, r1
 360:	08 f0       	brcs	.+2      	; 0x364 <SMTick1+0x2a>
 362:	b1 c0       	rjmp	.+354    	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 364:	ea 5b       	subi	r30, 0xBA	; 186
 366:	ff 4f       	sbci	r31, 0xFF	; 255
 368:	13 c1       	rjmp	.+550    	; 0x590 <__tablejump2__>
 36a:	81 e0       	ldi	r24, 0x01	; 1
 36c:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <tempB>
 370:	81 e3       	ldi	r24, 0x31	; 49
 372:	73 df       	rcall	.-282    	; 0x25a <LCD_WriteData>
 374:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 378:	8f 5f       	subi	r24, 0xFF	; 255
 37a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 37e:	a3 c0       	rjmp	.+326    	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 380:	82 e0       	ldi	r24, 0x02	; 2
 382:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <tempB>
 386:	82 e3       	ldi	r24, 0x32	; 50
 388:	68 df       	rcall	.-304    	; 0x25a <LCD_WriteData>
 38a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 38e:	8f 5f       	subi	r24, 0xFF	; 255
 390:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 394:	98 c0       	rjmp	.+304    	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 396:	83 e0       	ldi	r24, 0x03	; 3
 398:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <tempB>
 39c:	83 e3       	ldi	r24, 0x33	; 51
 39e:	5d df       	rcall	.-326    	; 0x25a <LCD_WriteData>
 3a0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 3a4:	8f 5f       	subi	r24, 0xFF	; 255
 3a6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 3aa:	8d c0       	rjmp	.+282    	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 3ac:	84 e0       	ldi	r24, 0x04	; 4
 3ae:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <tempB>
 3b2:	84 e3       	ldi	r24, 0x34	; 52
 3b4:	52 df       	rcall	.-348    	; 0x25a <LCD_WriteData>
 3b6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 3ba:	8f 5f       	subi	r24, 0xFF	; 255
 3bc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 3c0:	82 c0       	rjmp	.+260    	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 3c2:	85 e0       	ldi	r24, 0x05	; 5
 3c4:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <tempB>
 3c8:	85 e3       	ldi	r24, 0x35	; 53
 3ca:	47 df       	rcall	.-370    	; 0x25a <LCD_WriteData>
 3cc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 3d0:	8f 5f       	subi	r24, 0xFF	; 255
 3d2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 3d6:	77 c0       	rjmp	.+238    	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 3d8:	86 e0       	ldi	r24, 0x06	; 6
 3da:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <tempB>
 3de:	86 e3       	ldi	r24, 0x36	; 54
 3e0:	3c df       	rcall	.-392    	; 0x25a <LCD_WriteData>
 3e2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 3e6:	8f 5f       	subi	r24, 0xFF	; 255
 3e8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 3ec:	6c c0       	rjmp	.+216    	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 3ee:	87 e0       	ldi	r24, 0x07	; 7
 3f0:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <tempB>
 3f4:	87 e3       	ldi	r24, 0x37	; 55
 3f6:	31 df       	rcall	.-414    	; 0x25a <LCD_WriteData>
 3f8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 3fc:	8f 5f       	subi	r24, 0xFF	; 255
 3fe:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 402:	61 c0       	rjmp	.+194    	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 404:	88 e0       	ldi	r24, 0x08	; 8
 406:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <tempB>
 40a:	88 e3       	ldi	r24, 0x38	; 56
 40c:	26 df       	rcall	.-436    	; 0x25a <LCD_WriteData>
 40e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 412:	8f 5f       	subi	r24, 0xFF	; 255
 414:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 418:	56 c0       	rjmp	.+172    	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 41a:	89 e0       	ldi	r24, 0x09	; 9
 41c:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <tempB>
 420:	89 e3       	ldi	r24, 0x39	; 57
 422:	1b df       	rcall	.-458    	; 0x25a <LCD_WriteData>
 424:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 428:	8f 5f       	subi	r24, 0xFF	; 255
 42a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 42e:	4b c0       	rjmp	.+150    	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 430:	8a e0       	ldi	r24, 0x0A	; 10
 432:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <tempB>
 436:	81 e4       	ldi	r24, 0x41	; 65
 438:	10 df       	rcall	.-480    	; 0x25a <LCD_WriteData>
 43a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 43e:	8f 5f       	subi	r24, 0xFF	; 255
 440:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 444:	40 c0       	rjmp	.+128    	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 446:	8b e0       	ldi	r24, 0x0B	; 11
 448:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <tempB>
 44c:	82 e4       	ldi	r24, 0x42	; 66
 44e:	05 df       	rcall	.-502    	; 0x25a <LCD_WriteData>
 450:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 454:	8f 5f       	subi	r24, 0xFF	; 255
 456:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 45a:	35 c0       	rjmp	.+106    	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 45c:	8c e0       	ldi	r24, 0x0C	; 12
 45e:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <tempB>
 462:	83 e4       	ldi	r24, 0x43	; 67
 464:	fa de       	rcall	.-524    	; 0x25a <LCD_WriteData>
 466:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 46a:	8f 5f       	subi	r24, 0xFF	; 255
 46c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 470:	2a c0       	rjmp	.+84     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 472:	8d e0       	ldi	r24, 0x0D	; 13
 474:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <tempB>
 478:	84 e4       	ldi	r24, 0x44	; 68
 47a:	ef de       	rcall	.-546    	; 0x25a <LCD_WriteData>
 47c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 480:	8f 5f       	subi	r24, 0xFF	; 255
 482:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 486:	1f c0       	rjmp	.+62     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 488:	8e e0       	ldi	r24, 0x0E	; 14
 48a:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <tempB>
 48e:	8a e2       	ldi	r24, 0x2A	; 42
 490:	e4 de       	rcall	.-568    	; 0x25a <LCD_WriteData>
 492:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 496:	8f 5f       	subi	r24, 0xFF	; 255
 498:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 49c:	14 c0       	rjmp	.+40     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 49e:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <tempB>
 4a2:	80 e3       	ldi	r24, 0x30	; 48
 4a4:	da de       	rcall	.-588    	; 0x25a <LCD_WriteData>
 4a6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 4aa:	8f 5f       	subi	r24, 0xFF	; 255
 4ac:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 4b0:	0a c0       	rjmp	.+20     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4b2:	8f e0       	ldi	r24, 0x0F	; 15
 4b4:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <tempB>
 4b8:	83 e2       	ldi	r24, 0x23	; 35
 4ba:	cf de       	rcall	.-610    	; 0x25a <LCD_WriteData>
 4bc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 4c0:	8f 5f       	subi	r24, 0xFF	; 255
 4c2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 4c6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 4ca:	81 31       	cpi	r24, 0x11	; 17
 4cc:	19 f4       	brne	.+6      	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4ce:	81 e0       	ldi	r24, 0x01	; 1
 4d0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 4d4:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <tempB>
 4d8:	85 b9       	out	0x05, r24	; 5
 4da:	c8 01       	movw	r24, r16
 4dc:	cf 91       	pop	r28
 4de:	1f 91       	pop	r17
 4e0:	0f 91       	pop	r16
 4e2:	08 95       	ret

000004e4 <main>:

int main()
{
	// Set Data Direction Registers
	// Buttons PORTA[0-7], set AVR PORTA to pull down logic
	DDRA = 0xFF; PORTA = 0x00;
 4e4:	8f ef       	ldi	r24, 0xFF	; 255
 4e6:	81 b9       	out	0x01, r24	; 1
 4e8:	12 b8       	out	0x02, r1	; 2
	DDRB = 0xFF; PORTB = 0x00;
 4ea:	84 b9       	out	0x04, r24	; 4
 4ec:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xF0; PORTC = 0x0F; // PC7..4 outputs init 0s, PC3..0 inputs init 1s
 4ee:	90 ef       	ldi	r25, 0xF0	; 240
 4f0:	97 b9       	out	0x07, r25	; 7
 4f2:	9f e0       	ldi	r25, 0x0F	; 15
 4f4:	98 b9       	out	0x08, r25	; 8
	DDRD = 0xFF; PORTD = 0x00;
 4f6:	8a b9       	out	0x0a, r24	; 10
 4f8:	1b b8       	out	0x0b, r1	; 11
	static task task1;
	task *tasks[] = { &task1};
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);

	// Task 1
	task1.state = 0;//Task initial state.
 4fa:	e6 e1       	ldi	r30, 0x16	; 22
 4fc:	f1 e0       	ldi	r31, 0x01	; 1
 4fe:	10 82       	st	Z, r1
	task1.period = SMTick1_period;//Task Period.
 500:	88 ec       	ldi	r24, 0xC8	; 200
 502:	90 e0       	ldi	r25, 0x00	; 0
 504:	a0 e0       	ldi	r26, 0x00	; 0
 506:	b0 e0       	ldi	r27, 0x00	; 0
 508:	81 83       	std	Z+1, r24	; 0x01
 50a:	92 83       	std	Z+2, r25	; 0x02
 50c:	a3 83       	std	Z+3, r26	; 0x03
 50e:	b4 83       	std	Z+4, r27	; 0x04
	task1.elapsedTime = SMTick1_period;//Task current elapsed time.
 510:	85 83       	std	Z+5, r24	; 0x05
 512:	96 83       	std	Z+6, r25	; 0x06
 514:	a7 83       	std	Z+7, r26	; 0x07
 516:	b0 87       	std	Z+8, r27	; 0x08
	task1.TickFct = &SMTick1;//Function pointer for the tick.
 518:	8d e9       	ldi	r24, 0x9D	; 157
 51a:	91 e0       	ldi	r25, 0x01	; 1
 51c:	92 87       	std	Z+10, r25	; 0x0a
 51e:	81 87       	std	Z+9, r24	; 0x09


	// Set the timer and turn it on
	TimerSet(GCD);
 520:	61 e0       	ldi	r22, 0x01	; 1
 522:	70 e0       	ldi	r23, 0x00	; 0
 524:	80 e0       	ldi	r24, 0x00	; 0
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	51 de       	rcall	.-862    	; 0x1cc <TimerSet>
	TimerOn();
 52a:	f0 dd       	rcall	.-1056   	; 0x10c <TimerOn>
	
	LCD_init();
 52c:	87 de       	rcall	.-754    	; 0x23c <LCD_init>
 52e:	65 e0       	ldi	r22, 0x05	; 5
	LCD_DisplayString(1,"Congratulations!");
 530:	71 e0       	ldi	r23, 0x01	; 1
 532:	81 e0       	ldi	r24, 0x01	; 1
 534:	9b de       	rcall	.-714    	; 0x26c <LCD_DisplayString>
 536:	c6 e1       	ldi	r28, 0x16	; 22
	unsigned short i; // Scheduler for-loop iterator
	while(1) {
		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
			// Task is ready to tick
			if ( tasks[i]->elapsedTime >= tasks[i]->period ) {
 538:	d1 e0       	ldi	r29, 0x01	; 1
 53a:	4d 81       	ldd	r20, Y+5	; 0x05
 53c:	5e 81       	ldd	r21, Y+6	; 0x06
 53e:	6f 81       	ldd	r22, Y+7	; 0x07
 540:	78 85       	ldd	r23, Y+8	; 0x08
 542:	89 81       	ldd	r24, Y+1	; 0x01
 544:	9a 81       	ldd	r25, Y+2	; 0x02
 546:	ab 81       	ldd	r26, Y+3	; 0x03
 548:	bc 81       	ldd	r27, Y+4	; 0x04
 54a:	48 17       	cp	r20, r24
 54c:	59 07       	cpc	r21, r25
 54e:	6a 07       	cpc	r22, r26
 550:	7b 07       	cpc	r23, r27
 552:	60 f0       	brcs	.+24     	; 0x56c <main+0x88>
 554:	88 81       	ld	r24, Y
				// Setting next state for task
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 556:	e9 85       	ldd	r30, Y+9	; 0x09
 558:	fa 85       	ldd	r31, Y+10	; 0x0a
 55a:	08 2e       	mov	r0, r24
 55c:	00 0c       	add	r0, r0
 55e:	99 0b       	sbc	r25, r25
 560:	09 95       	icall
 562:	88 83       	st	Y, r24
 564:	1d 82       	std	Y+5, r1	; 0x05
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
 566:	1e 82       	std	Y+6, r1	; 0x06
 568:	1f 82       	std	Y+7, r1	; 0x07
 56a:	18 86       	std	Y+8, r1	; 0x08
 56c:	8d 81       	ldd	r24, Y+5	; 0x05
			}
			tasks[i]->elapsedTime += 1;
 56e:	9e 81       	ldd	r25, Y+6	; 0x06
 570:	af 81       	ldd	r26, Y+7	; 0x07
 572:	b8 85       	ldd	r27, Y+8	; 0x08
 574:	01 96       	adiw	r24, 0x01	; 1
 576:	a1 1d       	adc	r26, r1
 578:	b1 1d       	adc	r27, r1
 57a:	8d 83       	std	Y+5, r24	; 0x05
 57c:	9e 83       	std	Y+6, r25	; 0x06
 57e:	af 83       	std	Y+7, r26	; 0x07
 580:	b8 87       	std	Y+8, r27	; 0x08
 582:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <TimerFlag>
		}
		while(!TimerFlag);
 586:	88 23       	and	r24, r24
 588:	e1 f3       	breq	.-8      	; 0x582 <main+0x9e>
 58a:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <TimerFlag>
		TimerFlag = 0;
 58e:	d5 cf       	rjmp	.-86     	; 0x53a <main+0x56>

00000590 <__tablejump2__>:
	}
 590:	ee 0f       	add	r30, r30
 592:	ff 1f       	adc	r31, r31
 594:	00 24       	eor	r0, r0
 596:	00 1c       	adc	r0, r0
 598:	0b be       	out	0x3b, r0	; 59
 59a:	07 90       	elpm	r0, Z+
 59c:	f6 91       	elpm	r31, Z
 59e:	e0 2d       	mov	r30, r0
 5a0:	09 94       	ijmp

000005a2 <_exit>:
 5a2:	f8 94       	cli

000005a4 <__stop_program>:
 5a4:	ff cf       	rjmp	.-2      	; 0x5a4 <__stop_program>
